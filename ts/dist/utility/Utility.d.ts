import { addfeature } from './AddfeatureUtility';
import { auth } from './AuthUtility';
import { body } from './BodyUtility';
import { clean } from './CleanUtility';
import { contextify } from './ContextUtility';
import { done } from './DoneUtility';
import { error } from './ErrorUtility';
import { featurehook } from './FeaturehookUtility';
import { fetcher } from './FetcherUtility';
import { findparam } from './FindparamUtility';
import { fullurl } from './FullurlUtility';
import { headers } from './HeadersUtility';
import { initfeature } from './InitfeatureUtility';
import { method } from './MethodUtility';
import { operator, opify } from './OperatorUtility';
import { options } from './OptionsUtility';
import { params } from './ParamsUtility';
import { query } from './QueryUtility';
import { reqform } from './ReqformUtility';
import { request } from './RequestUtility';
import { resbasic } from './ResbasicUtility';
import { resbody } from './ResbodyUtility';
import { resform } from './ResformUtility';
import { resheaders } from './ResheadersUtility';
import { response } from './ResponseUtility';
import { result } from './ResultUtility';
import { spec } from './SpecUtility';
import { StructUtility } from './StructUtility';
declare class Utility {
    addfeature: typeof addfeature;
    auth: typeof auth;
    body: typeof body;
    clean: typeof clean;
    contextify: typeof contextify;
    done: typeof done;
    error: typeof error;
    featurehook: typeof featurehook;
    fetcher: typeof fetcher;
    findparam: typeof findparam;
    fullurl: typeof fullurl;
    headers: typeof headers;
    initfeature: typeof initfeature;
    method: typeof method;
    operator: typeof operator;
    opify: typeof opify;
    options: typeof options;
    params: typeof params;
    query: typeof query;
    reqform: typeof reqform;
    request: typeof request;
    resbasic: typeof resbasic;
    resbody: typeof resbody;
    resform: typeof resform;
    resheaders: typeof resheaders;
    response: typeof response;
    result: typeof result;
    spec: typeof spec;
    struct: StructUtility;
}
export { Utility };

# Entity: course

main: api: entity: course: {

  alias: field: {}

  op: {
    create: {
      path: "/v2/courses",
      pathalt: [
        {
          path: "/v2/courses"
        }
      ],
      method: "post",
      kind: "req",
      param: {}

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: default
      reqform: "`reqdata`",
      validate: {
        params: {
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "create",
      Name: "Create",
      NAME: "CREATE"
    }

    list: {
      path: "/v2/courses",
      pathalt: [
        {
          path: "/v2/courses"
        }
      ],
      method: "get",
      kind: "res",
      param: {}

      query: {
        categories: {
          name: "categories",
          Name: "Categories",
          NAME: "CATEGORIES",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        page: {
          required: false,
          name: "page",
          Name: "Page",
          NAME: "PAGE",
          type: "integer",
          Type: "Integer",
          TYPE: "INTEGER"
        }

        access: {
          name: "access",
          Name: "Access",
          NAME: "ACCESS",
          type: "array",
          Type: "Array",
          TYPE: "ARRAY"
        }
      }


      # resform derivation: list-single-array:data
      resform: "`body.data`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          "Lw-Client": "`$STRING`",
          Authorization: "`$STRING`"
        }
      }

      name: "list",
      Name: "List",
      NAME: "LIST"
    }

    load: {
      path: "/v2/courses/{id}",
      pathalt: [
        {
          path: "/v2/courses/{id}",
          id: true
        }
      ],
      method: "get",
      kind: "res",
      param: {
        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          id: "`$STRING`",
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "load",
      Name: "Load",
      NAME: "LOAD"
    }

    update: {
      path: "/v2/courses/{id}",
      pathalt: [
        {
          path: "/v2/courses/{id}",
          id: true
        }
      ],
      method: "put",
      kind: "req",
      param: {
        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: default
      reqform: "`reqdata`",
      validate: {
        params: {
          id: "`$STRING`",
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "update",
      Name: "Update",
      NAME: "UPDATE"
    }
  }

  field: {
    id: {
      name: "id",
      Name: "Id",
      NAME: "ID",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Unique identifier of the course"
    }

    title: {
      name: "title",
      Name: "Title",
      NAME: "TITLE",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Title of the course"
    }

    expires: {
      name: "expires",
      Name: "Expires",
      NAME: "EXPIRES",
      type: "integer",
      typelist: [
        "null",
        "integer"
      ],
      Type: "Integer",
      TYPE: "INTEGER",
      short: "Expiration timeframe value, defines the expiration timeframe, together with the type / unit in the \"expiresType\" field."
    }

    expiresType: {
      name: "expirestype",
      Name: "ExpiresType",
      NAME: "EXPIRESTYPE",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Expiration timeframe type / unit, defines the expiration timeframe, together with the actual value in the \"expires\" field. "
    }

    afterPurchase: {
      name: "afterpurchase",
      Name: "AfterPurchase",
      NAME: "AFTERPURCHASE",
      type: "object",
      Type: "Object",
      TYPE: "OBJECT",
      short: "After purchase navigation settings for this course"
    }

    categories: {
      name: "categories",
      Name: "Categories",
      NAME: "CATEGORIES",
      type: "array",
      Type: "Array",
      TYPE: "ARRAY",
      short: "Categories this course belongs in"
    }

    description: {
      name: "description",
      Name: "Description",
      NAME: "DESCRIPTION",
      type: "string",
      typelist: [
        "string",
        "null"
      ],
      Type: "String",
      TYPE: "STRING",
      short: "Description of the course"
    }

    label: {
      name: "label",
      Name: "Label",
      NAME: "LABEL",
      type: "string",
      typelist: [
        "null",
        "string"
      ],
      Type: "String",
      TYPE: "STRING",
      short: "Label of the course"
    }

    author: {
      name: "author",
      Name: "Author",
      NAME: "AUTHOR",
      type: "object",
      typelist: [
        "object",
        "null"
      ],
      Type: "Object",
      TYPE: "OBJECT",
      short: "Information about the course author"
    }

    courseImage: {
      name: "courseimage",
      Name: "CourseImage",
      NAME: "COURSEIMAGE",
      type: "string",
      typelist: [
        "string",
        "null"
      ],
      Type: "String",
      TYPE: "STRING",
      short: "Course image (full URL)"
    }

    original_price: {
      name: "original_price",
      Name: "OriginalPrice",
      NAME: "ORIGINAL_PRICE",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Original price of the course"
    }

    discount_price: {
      name: "discount_price",
      Name: "DiscountPrice",
      NAME: "DISCOUNT_PRICE",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Discount price of the course"
    }

    final_price: {
      name: "final_price",
      Name: "FinalPrice",
      NAME: "FINAL_PRICE",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Final price of the course"
    }

    dripFeed: {
      name: "dripfeed",
      Name: "DripFeed",
      NAME: "DRIPFEED",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Course setting for scheduled course delivery (drip feed); none refers to drip feed not being enabled."
    }

    identifiers: {
      name: "identifiers",
      Name: "Identifiers",
      NAME: "IDENTIFIERS",
      type: "object",
      Type: "Object",
      TYPE: "OBJECT",
      short: "Course identifiers for in app purchases."
    }

    access: {
      name: "access",
      Name: "Access",
      NAME: "ACCESS",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Access type of course"
    }

    created: {
      name: "created",
      Name: "Created",
      NAME: "CREATED",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Date the course was created, in UNIX timestamp format"
    }

    modified: {
      name: "modified",
      Name: "Modified",
      NAME: "MODIFIED",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Date the course was modified for the last time, in UNIX timestamp format"
    }
  }

  cmd: {}

  id: {
    name: "id",
    field: "id"
  }

  ancestors: [],
  name: "course",
  Name: "Course",
  NAME: "COURSE",
  "key$": "course"


}

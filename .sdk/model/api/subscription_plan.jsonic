# Entity: subscription_plan

main: api: entity: subscription_plan: {

  alias: field: {}

  op: {
    list: {
      path: "/v2/subscription-plans",
      pathalt: [
        {
          path: "/v2/subscription-plans"
        }
      ],
      method: "get",
      kind: "res",
      param: {}

      query: {
        page: {
          required: false,
          name: "page",
          Name: "Page",
          NAME: "PAGE",
          type: "integer",
          Type: "Integer",
          TYPE: "INTEGER"
        }

        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: list-single-array:data
      resform: "`body.data`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "list",
      Name: "List",
      NAME: "LIST"
    }

    load: {
      path: "/v2/subscription-plans/{id}",
      pathalt: [
        {
          path: "/v2/subscription-plans/{id}",
          id: true
        }
      ],
      method: "get",
      kind: "res",
      param: {
        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          id: "`$STRING`",
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "load",
      Name: "Load",
      NAME: "LOAD"
    }
  }

  field: {
    id: {
      name: "id",
      Name: "Id",
      NAME: "ID",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Unique identifier of the subscription plan"
    }

    title: {
      name: "title",
      Name: "Title",
      NAME: "TITLE",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Title of the subscription plan"
    }

    stripePlanId: {
      name: "stripeplanid",
      Name: "StripePlanId",
      NAME: "STRIPEPLANID",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Stripe's plan Id"
    }

    description: {
      name: "description",
      Name: "Description",
      NAME: "DESCRIPTION",
      type: "string",
      typelist: [
        "string",
        "null"
      ],
      Type: "String",
      TYPE: "STRING",
      short: "Description of the subscription"
    }

    products: {
      name: "products",
      Name: "Products",
      NAME: "PRODUCTS",
      type: "object",
      Type: "Object",
      TYPE: "OBJECT",
      short: "Products in the subsription"
    }

    image: {
      name: "image",
      Name: "Image",
      NAME: "IMAGE",
      type: "string",
      typelist: [
        "string",
        "null"
      ],
      Type: "String",
      TYPE: "STRING",
      short: "Subscription plan image (full URL)"
    }

    interval: {
      name: "interval",
      Name: "Interval",
      NAME: "INTERVAL",
      type: "integer",
      Type: "Integer",
      TYPE: "INTEGER",
      short: "Billing interval value"
    }

    interval_type: {
      name: "interval_type",
      Name: "IntervalType",
      NAME: "INTERVAL_TYPE",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Billing interval type"
    }

    trial_period_days: {
      name: "trial_period_days",
      Name: "TrialPeriodDays",
      NAME: "TRIAL_PERIOD_DAYS",
      type: "integer",
      Type: "Integer",
      TYPE: "INTEGER",
      short: "Number of days the trial subscription plan lasts"
    }

    afterPurchase: {
      name: "afterpurchase",
      Name: "AfterPurchase",
      NAME: "AFTERPURCHASE",
      type: "object",
      Type: "Object",
      TYPE: "OBJECT",
      short: "After purchase navigation settings for this subscription plan"
    }

    access: {
      name: "access",
      Name: "Access",
      NAME: "ACCESS",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Access type of the subscription"
    }

    created: {
      name: "created",
      Name: "Created",
      NAME: "CREATED",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Date the subscription plan was created, in UNIX timestamp format"
    }

    modified: {
      name: "modified",
      Name: "Modified",
      NAME: "MODIFIED",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Date the subscription plan was modified for the last time, in UNIX timestamp format"
    }

    price: {
      name: "price",
      Name: "Price",
      NAME: "PRICE",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Price of the subscription plan"
    }
  }

  cmd: {}

  id: {
    name: "id",
    field: "id"
  }

  ancestors: [],
  name: "subscription_plan",
  Name: "SubscriptionPlan",
  NAME: "SUBSCRIPTION_PLAN",
  "key$": "subscription_plan"


}

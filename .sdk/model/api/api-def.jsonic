# API Definition


"main": {
  "def": {
    "info": {
      "title": "API",
      "version": 2,
      "summary": "The public API of LearnWorlds",
      "license": {
        "name": "MIT"
      },
      "description": "## HTTP Methods\n\nThis API uses HTTP verbs (methods) as following:\n\n+ `GET` - *Read* - used to **read** (or retrieve) a representation of a resource,\n+ `POST` - *Create* - used to **create** new resources. In particular, it's used to create subordinate resources.\n+ `PUT` - *Update/Replace* - used for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. On successful request, replaces identified resource with the request body.\n+ `DELETE` - *Delete* - used to **delete** a resource identified by a URI.\n\n---\n\n## Required Headers for all requests\n\n+ Lw-Client: {The school ID}\n+ Authorization : Bearer {token}\n\n---\n\n## Rate Limit\n\nA rate limit is the number of API calls an app can make within a given time period. If this limit is exceeded any extra request will fail and the App will respond with a 429 \"Too many Requests\" error. All API requests are subject to rate limits.\n\n**LearnWorlds has a Rate limit of 30 requests / 10 sec**\n\n---\n\n## Status Codes and Errors\n\nThis API uses HTTP status codes to communicate with the API consumer.\n\n+ `200 OK` - Response to a successful GET, PUT.\n+ `201 Created` - Response to a POST that the resource is succesfully created.\n+ `204 No Content` - Response to a successful request that won't be returning a body (like a DELETE request).\n+ `400 Bad Request` - Bad request\n+ `401 Unauthorized` - When no or invalid authentication details are provided.\n+ `403 Forbidden` - When authentication succeeded but authenticated user doesn't have access to the resource.\n+ `404 Not Found` - When a non-existent resource is requested.\n+ `422 Validation error` - You should check your input again.\n+ `429 Too many requests` - The consumer has sent too many requests in a given amount of time (“rate limiting”).\n+ `500 Server error` - A general server error.\n\n\n### Examples\n\n\n##### Bad Request\n```json\n{\n    \"errors\": [\n        {\n            \"code\": \"400\",\n            \"context\": \"access_denied\",\n            \"message\": \"The resource owner or authorization server denied the request.\"\n        }\n    ],\n    \"success\": false\n}\n```\n\n##### Too many Requests\n```json\n{\n    \"error\": \"Too many requests\"\n}\n```\n\n##### Unauthorized\n```json\n{\n    \"errors\": [\n        {\n            \"code\": \"401\",\n            \"context\": null,\n            \"message\": \"Invalid object ID\"\n        }\n    ],\n    \"success\": false\n}\n```\n\n##### Resource not found\n\n```json\n{\n    \"error\": \"Sorry the resource your trying to access does not exist.\"\n}\n```\n\n\n##### Validation Error\n\n```json\n{\n    \"error\": \"You need to provide a valid product_type query parameters value: 'course', 'bundle', 'subscription'\"\n}\n```\n\n##### Generic Error\n\n```json\n{\n    \"error\": \"Server Error\" \n}\n```\n\n---\n\n## Representation of Date and DateTime\n\n+ All exchange of Date should follow the ISO 8601 standard.\n+ All exchange of DateTime should follow the Unix timestamp format.\n\nWhen you send a Date as input to create a new resource or to filter results, you need to send it as a valid date string with the form \"yyyy-mm-dd\" (Ex: \"2021-05-28\").\n\nWhen you send a DateTime as input to create a new resource or to filter results, you need to send it formatted as a valid Unix timestamp number  (Ex: 1626088013, 1587639230.083278).\n\n---\n\n## Representation of Float Numbers\n\nFloat numbers  are represented with **dot** decimal-point character (Ex: 73.45, 1587639230.083278). The dot character is omitted for numbers with zero value(s) after the decimal-point. For instance, the numbers  52.00 or 52.0 will be presented as 52.\n"
    },
    "servers": [
      {
        "url": "https://stoplight.io/mocks/learnworlds/api:main/2951998",
        "description": "Mock"
      }
    ]
  }
}

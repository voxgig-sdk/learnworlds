# Entity: certificate

main: api: entity: certificate: {

  alias: field: {}

  op: {
    list: {
      path: "/v2/certificates",
      pathalt: [
        {
          path: "/v2/certificates"
        }
      ],
      method: "get",
      kind: "res",
      param: {}

      query: {
        course_id: {
          name: "course_id",
          Name: "CourseId",
          NAME: "COURSE_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        user_id: {
          name: "user_id",
          Name: "UserId",
          NAME: "USER_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        page: {
          required: false,
          name: "page",
          Name: "Page",
          NAME: "PAGE",
          type: "integer",
          Type: "Integer",
          TYPE: "INTEGER"
        }
      }


      # resform derivation: list-single-array:data
      resform: "`body.data`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "list",
      Name: "List",
      NAME: "LIST"
    }

    update: {
      path: "/v2/certificates/{id}",
      pathalt: [
        {
          path: "/v2/certificates/{id}",
          id: true
        }
      ],
      method: "put",
      kind: "req",
      param: {
        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: default
      reqform: "`reqdata`",
      validate: {
        params: {
          id: "`$STRING`",
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "update",
      Name: "Update",
      NAME: "UPDATE"
    }

    remove: {
      path: "/v2/certificates/{id}",
      pathalt: [
        {
          path: "/v2/certificates/{id}",
          id: true
        }
      ],
      method: "delete",
      kind: "res",
      param: {
        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: none
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          id: "`$STRING`",
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "remove",
      Name: "Remove",
      NAME: "REMOVE"
    }
  }

  field: {}

  cmd: {}

  id: {
    name: "id",
    field: "id"
  }

  ancestors: [],
  name: "certificate",
  Name: "Certificate",
  NAME: "CERTIFICATE",
  "key$": "certificate"


}

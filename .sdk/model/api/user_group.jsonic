# Entity: user_group

main: api: entity: user_group: {

  alias: field: {}

  op: {
    create: {
      path: "/v2/user_groups",
      pathalt: [
        {
          path: "/v2/user_groups"
        }
      ],
      method: "post",
      kind: "req",
      param: {}

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: default
      reqform: "`reqdata`",
      validate: {
        params: {
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "create",
      Name: "Create",
      NAME: "CREATE"
    }

    list: {
      path: "/v2/user_groups",
      pathalt: [
        {
          path: "/v2/users/{user_id}/user-groups",
          user_id: true
        }

        {
          path: "/v2/user_groups",
          user_id: false
        }
      ],
      method: "get",
      kind: "res",
      param: {
        user_id: {
          required: true,
          name: "user_id",
          Name: "UserId",
          NAME: "USER_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        Authorization: {
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          user_id: "`$STRING`"
        }
      }

      name: "list",
      Name: "List",
      NAME: "LIST"
    }

    load: {
      path: "/v2/user_groups/{id}",
      pathalt: [
        {
          path: "/v2/user_groups/{id}",
          id: true
        }
      ],
      method: "get",
      kind: "res",
      param: {
        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          id: "`$STRING`",
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "load",
      Name: "Load",
      NAME: "LOAD"
    }

    update: {
      path: "/v2/user_groups/{id}",
      pathalt: [
        {
          path: "/v2/user_groups/{id}",
          id: true
        }
      ],
      method: "put",
      kind: "req",
      param: {
        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: default
      reqform: "`reqdata`",
      validate: {
        params: {
          id: "`$STRING`",
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "update",
      Name: "Update",
      NAME: "UPDATE"
    }
  }

  field: {
    id: {
      name: "id",
      Name: "Id",
      NAME: "ID",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Unique identifier of the user group."
    }

    title: {
      name: "title",
      Name: "Title",
      NAME: "TITLE",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Title of the user group."
    }

    description: {
      name: "description",
      Name: "Description",
      NAME: "DESCRIPTION",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Description of the user group."
    }

    products: {
      name: "products",
      Name: "Products",
      NAME: "PRODUCTS",
      type: "object",
      Type: "Object",
      TYPE: "OBJECT",
      short: "Products in the user group"
    }

    enroll_users_on_courses: {
      name: "enroll_users_on_courses",
      Name: "EnrollUsersOnCourses",
      NAME: "ENROLL_USERS_ON_COURSES",
      type: "boolean",
      Type: "Boolean",
      TYPE: "BOOLEAN",
      short: "Enroll users in all selected courses automatically upon joining the user group."
    }

    group_managers: {
      name: "group_managers",
      Name: "GroupManagers",
      NAME: "GROUP_MANAGERS",
      type: "array",
      Type: "Array",
      TYPE: "ARRAY",
      short: "Unique identifier of each group manager."
    }

    tags: {
      name: "tags",
      Name: "Tags",
      NAME: "TAGS",
      type: "array",
      Type: "Array",
      TYPE: "ARRAY",
      short: "Tags assigned to the users added to the user group."
    }

    created: {
      name: "created",
      Name: "Created",
      NAME: "CREATED",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Date the user group was created; displayed in UNIX timestamp format."
    }

    modified: {
      name: "modified",
      Name: "Modified",
      NAME: "MODIFIED",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Date the user group was modified for the last time; displayed in UNIX timestamp format."
    }
  }

  cmd: {}

  id: {
    name: "id",
    field: "id"
  }

  ancestors: [],
  name: "user_group",
  Name: "UserGroup",
  NAME: "USER_GROUP",
  "key$": "user_group"


}

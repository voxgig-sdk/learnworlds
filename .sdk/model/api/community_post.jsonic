# Entity: community_post

main: api: entity: community_post: {

  alias: field: {}

  op: {
    list: {
      path: "/v2/community/posts",
      pathalt: [
        {
          path: "/v2/community/posts"
        }
      ],
      method: "get",
      kind: "res",
      param: {}

      query: {
        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        user_id: {
          name: "user_id",
          Name: "UserId",
          NAME: "USER_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        space_id: {
          name: "space_id",
          Name: "SpaceId",
          NAME: "SPACE_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        course_id: {
          name: "course_id",
          Name: "CourseId",
          NAME: "COURSE_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        mentions: {
          name: "mentions",
          Name: "Mentions",
          NAME: "MENTIONS",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        page: {
          required: false,
          name: "page",
          Name: "Page",
          NAME: "PAGE",
          type: "integer",
          Type: "Integer",
          TYPE: "INTEGER"
        }

        items_per_page: {
          name: "items_per_page",
          Name: "ItemsPerPage",
          NAME: "ITEMS_PER_PAGE",
          type: "integer",
          Type: "Integer",
          TYPE: "INTEGER"
        }
      }


      # resform derivation: list-single-array:data
      resform: "`body.data`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          "Lw-Client": "`$STRING`",
          Authorization: "`$STRING`"
        }
      }

      name: "list",
      Name: "List",
      NAME: "LIST"
    }

    load: {
      path: "/v2/community/posts/{id}",
      pathalt: [
        {
          path: "/v2/community/posts/{id}",
          id: true
        }
      ],
      method: "get",
      kind: "res",
      param: {
        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          id: "`$STRING`",
          "Lw-Client": "`$STRING`",
          Authorization: "`$STRING`"
        }
      }

      name: "load",
      Name: "Load",
      NAME: "LOAD"
    }
  }

  field: {
    id: {
      name: "id",
      Name: "Id",
      NAME: "ID",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Unique identifier of the post"
    }

    posted_in: {
      name: "posted_in",
      Name: "PostedIn",
      NAME: "POSTED_IN",
      type: "object",
      Type: "Object",
      TYPE: "OBJECT",
      short: "Information about where the post was made"
    }

    user: {
      name: "user",
      Name: "User",
      NAME: "USER",
      type: "object",
      Type: "Object",
      TYPE: "OBJECT",
      short: "Information about the post author"
    }

    text: {
      name: "text",
      Name: "Text",
      NAME: "TEXT",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Text content of the post"
    }

    mentions: {
      name: "mentions",
      Name: "Mentions",
      NAME: "MENTIONS",
      type: "array",
      Type: "Array",
      TYPE: "ARRAY",
      short: "User mentions of the post"
    }

    likes: {
      name: "likes",
      Name: "Likes",
      NAME: "LIKES",
      type: "array",
      Type: "Array",
      TYPE: "ARRAY",
      short: "List of users who have liked the post"
    }

    upvotes: {
      name: "upvotes",
      Name: "Upvotes",
      NAME: "UPVOTES",
      type: "array",
      Type: "Array",
      TYPE: "ARRAY",
      short: "List of users who have upvoted the post"
    }

    items: {
      name: "items",
      Name: "Items",
      NAME: "ITEMS",
      type: "array",
      Type: "Array",
      TYPE: "ARRAY",
      short: "List of post content items outside of text content"
    }

    created: {
      name: "created",
      Name: "Created",
      NAME: "CREATED",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Date the post was made, in UNIX timestamp format"
    }
  }

  cmd: {}

  id: {
    name: "id",
    field: "id"
  }

  ancestors: [],
  name: "community_post",
  Name: "CommunityPost",
  NAME: "COMMUNITY_POST",
  "key$": "community_post"


}

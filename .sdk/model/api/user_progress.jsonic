# Entity: user_progress

main: api: entity: user_progress: {

  alias: field: {}

  op: {
    load: {
      path: "/v2/users/{user_id}/courses/{cid}/progress",
      pathalt: [
        {
          path: "/v2/users/{user_id}/courses/{cid}/progress",
          user_id: true,
          cid: true
        }
      ],
      method: "get",
      kind: "res",
      param: {
        user_id: {
          required: true,
          name: "user_id",
          Name: "UserId",
          NAME: "USER_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        cid: {
          required: true,
          name: "cid",
          Name: "Cid",
          NAME: "CID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          user_id: "`$STRING`",
          cid: "`$STRING`",
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "load",
      Name: "Load",
      NAME: "LOAD"
    }

    list: {
      path: "/v2/users/{user_id}/progress",
      pathalt: [
        {
          path: "/v2/users/{user_id}/progress",
          user_id: true
        }
      ],
      method: "get",
      kind: "res",
      param: {
        user_id: {
          required: true,
          name: "user_id",
          Name: "UserId",
          NAME: "USER_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        page: {
          name: "page",
          Name: "Page",
          NAME: "PAGE",
          type: "integer",
          Type: "Integer",
          TYPE: "INTEGER"
        }

        items_per_page: {
          name: "items_per_page",
          Name: "ItemsPerPage",
          NAME: "ITEMS_PER_PAGE",
          type: "integer",
          Type: "Integer",
          TYPE: "INTEGER"
        }
      }


      # resform derivation: list-single-array:data
      resform: "`body.data`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          user_id: "`$STRING`",
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "list",
      Name: "List",
      NAME: "LIST"
    }
  }

  field: {
    status: {
      name: "status",
      Name: "Status",
      NAME: "STATUS",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Status of user progress"
    }

    progress_rate: {
      name: "progress_rate",
      Name: "ProgressRate",
      NAME: "PROGRESS_RATE",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Progress rate (%)"
    }

    average_score_rate: {
      name: "average_score_rate",
      Name: "AverageScoreRate",
      NAME: "AVERAGE_SCORE_RATE",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Average score percentage"
    }

    time_on_course: {
      name: "time_on_course",
      Name: "TimeOnCourse",
      NAME: "TIME_ON_COURSE",
      type: "integer",
      Type: "Integer",
      TYPE: "INTEGER",
      short: "Time spent on the course in seconds"
    }

    total_units: {
      name: "total_units",
      Name: "TotalUnits",
      NAME: "TOTAL_UNITS",
      type: "integer",
      Type: "Integer",
      TYPE: "INTEGER",
      short: "Total number of course learning activities "
    }

    completed_units: {
      name: "completed_units",
      Name: "CompletedUnits",
      NAME: "COMPLETED_UNITS",
      type: "integer",
      Type: "Integer",
      TYPE: "INTEGER",
      short: "Total number of completed course learning activities by the user "
    }

    completed_at: {
      name: "completed_at",
      Name: "CompletedAt",
      NAME: "COMPLETED_AT",
      type: "number",
      typelist: [
        "number",
        "null"
      ],
      Type: "Number",
      TYPE: "NUMBER",
      short: "Completion date in UNIX timestamp format. If status is not_started or not_completed the null value will be returned"
    }

    progress_per_section_unit: {
      name: "progress_per_section_unit",
      Name: "ProgressPerSectionUnit",
      NAME: "PROGRESS_PER_SECTION_UNIT",
      type: "array",
      Type: "Array",
      TYPE: "ARRAY",
      short: "User progress data per section/learning activity"
    }
  }

  cmd: {}

  id: {
    name: "id",
    field: "id"
  }

  ancestors: [
    "user",
    "course"
  ],
  name: "user_progress",
  Name: "UserProgress",
  NAME: "USER_PROGRESS",
  "key$": "user_progress"


}

# Entity: payment

main: api: entity: payment: {

  alias: field: {}

  op: {
    list: {
      path: "/v2/payments",
      pathalt: [
        {
          path: "/v2/affiliates/{affiliate_id}/payments",
          affiliate_id: true
        }

        {
          path: "/v2/payments",
          affiliate_id: false
        }
      ],
      method: "get",
      kind: "res",
      param: {
        affiliate_id: {
          required: true,
          name: "affiliate_id",
          Name: "AffiliateId",
          NAME: "AFFILIATE_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        product_type: {
          name: "product_type",
          Name: "ProductType",
          NAME: "PRODUCT_TYPE",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        user_id: {
          name: "user_id",
          Name: "UserId",
          NAME: "USER_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        affiliate_id: {
          name: "affiliate_id",
          Name: "AffiliateId",
          NAME: "AFFILIATE_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        product_id: {
          name: "product_id",
          Name: "ProductId",
          NAME: "PRODUCT_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        page: {
          required: false,
          name: "page",
          Name: "Page",
          NAME: "PAGE",
          type: "integer",
          Type: "Integer",
          TYPE: "INTEGER"
        }

        items_per_page: {
          name: "items_per_page",
          Name: "ItemsPerPage",
          NAME: "ITEMS_PER_PAGE",
          type: "integer",
          Type: "Integer",
          TYPE: "INTEGER"
        }

        created_before: {
          name: "created_before",
          Name: "CreatedBefore",
          NAME: "CREATED_BEFORE",
          type: "number",
          Type: "Number",
          TYPE: "NUMBER"
        }

        created_after: {
          name: "created_after",
          Name: "CreatedAfter",
          NAME: "CREATED_AFTER",
          type: "number",
          Type: "Number",
          TYPE: "NUMBER"
        }
      }


      # resform derivation: list-single-array:data
      resform: "`body.data`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "list",
      Name: "List",
      NAME: "LIST"
    }

    load: {
      path: "/v2/payments/{id}",
      pathalt: [
        {
          path: "/v2/payments/{id}",
          id: true
        }
      ],
      method: "get",
      kind: "res",
      param: {
        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        Authorization: {
          required: true,
          name: "authorization",
          Name: "Authorization",
          NAME: "AUTHORIZATION",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        "Lw-Client": {
          required: true,
          name: "lw-client",
          Name: "LwClient",
          NAME: "LW-CLIENT",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          id: "`$STRING`",
          Authorization: "`$STRING`",
          "Lw-Client": "`$STRING`"
        }
      }

      name: "load",
      Name: "Load",
      NAME: "LOAD"
    }
  }

  field: {
    id: {
      name: "id",
      Name: "Id",
      NAME: "ID",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Unique identifier of the payment"
    }

    transaction_id: {
      name: "transaction_id",
      Name: "TransactionId",
      NAME: "TRANSACTION_ID",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Transaction id of the payment"
    }

    type: {
      name: "type",
      Name: "Type",
      NAME: "TYPE",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Type of the payment"
    }

    product: {
      name: "product",
      Name: "Product",
      NAME: "PRODUCT",
      type: "object",
      Type: "Object",
      TYPE: "OBJECT",
      short: "Related product data"
    }

    price: {
      name: "price",
      Name: "Price",
      NAME: "PRICE",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Price of the payment"
    }

    discount: {
      name: "discount",
      Name: "Discount",
      NAME: "DISCOUNT",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Discount of the payment"
    }

    refund_at: {
      name: "refund_at",
      Name: "RefundAt",
      NAME: "REFUND_AT",
      type: "number",
      typelist: [
        "null",
        "number"
      ],
      Type: "Number",
      TYPE: "NUMBER",
      short: "Refund date, in UNIX timestamp format"
    }

    user_id: {
      name: "user_id",
      Name: "UserId",
      NAME: "USER_ID",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Unique identifier of the user"
    }

    paid_at: {
      name: "paid_at",
      Name: "PaidAt",
      NAME: "PAID_AT",
      type: "number",
      typelist: [
        "number",
        "null"
      ],
      Type: "Number",
      TYPE: "NUMBER",
      short: "Payment date, in UNIX timestamp format"
    }

    invoice: {
      name: "invoice",
      Name: "Invoice",
      NAME: "INVOICE",
      type: "string",
      typelist: [
        "null",
        "string"
      ],
      Type: "String",
      TYPE: "STRING",
      short: "Invoice identifier"
    }

    billing_info: {
      name: "billing_info",
      Name: "BillingInfo",
      NAME: "BILLING_INFO",
      type: "object",
      typelist: [
        "null",
        "object"
      ],
      Type: "Object",
      TYPE: "OBJECT",
      short: "Billing info of the payment"
    }

    coupon: {
      name: "coupon",
      Name: "Coupon",
      NAME: "COUPON",
      type: "string",
      typelist: [
        "null",
        "string"
      ],
      Type: "String",
      TYPE: "STRING",
      short: "Coupon code"
    }

    instructors: {
      name: "instructors",
      Name: "Instructors",
      NAME: "INSTRUCTORS",
      type: "array",
      Type: "Array",
      TYPE: "ARRAY",
      short: "Related instructor data"
    }

    instructors_total_percentage: {
      name: "instructors_total_percentage",
      Name: "InstructorsTotalPercentage",
      NAME: "INSTRUCTORS_TOTAL_PERCENTAGE",
      type: "number",
      typelist: [
        "null",
        "number"
      ],
      Type: "Number",
      TYPE: "NUMBER",
      short: "Total percentage of the revenue for the instructor"
    }

    tax_amount: {
      name: "tax_amount",
      Name: "TaxAmount",
      NAME: "TAX_AMOUNT",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Tax amount of the payment"
    }

    tax_percentage: {
      name: "tax_percentage",
      Name: "TaxPercentage",
      NAME: "TAX_PERCENTAGE",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Tax percentage of the payment"
    }

    affiliate: {
      name: "affiliate",
      Name: "Affiliate",
      NAME: "AFFILIATE",
      type: "object",
      Type: "Object",
      TYPE: "OBJECT",
      short: "Related affiliate data"
    }

    period: {
      name: "period",
      Name: "Period",
      NAME: "PERIOD",
      type: "string",
      typelist: [
        "null",
        "string"
      ],
      Type: "String",
      TYPE: "STRING",
      short: "Payment plan period"
    }

    payment_plan_current_payment: {
      name: "payment_plan_current_payment",
      Name: "PaymentPlanCurrentPayment",
      NAME: "PAYMENT_PLAN_CURRENT_PAYMENT",
      type: "integer",
      typelist: [
        "integer",
        "null"
      ],
      Type: "Integer",
      TYPE: "INTEGER",
      short: "Current payment number of payment plan"
    }

    payment_plan_total_payments: {
      name: "payment_plan_total_payments",
      Name: "PaymentPlanTotalPayments",
      NAME: "PAYMENT_PLAN_TOTAL_PAYMENTS",
      type: "integer",
      typelist: [
        "integer",
        "null"
      ],
      Type: "Integer",
      TYPE: "INTEGER",
      short: "Total payments number of payment plan"
    }

    gateway: {
      name: "gateway",
      Name: "Gateway",
      NAME: "GATEWAY",
      type: "string",
      typelist: [
        "null",
        "string"
      ],
      Type: "String",
      TYPE: "STRING",
      short: "Payment gateway name"
    }

    created: {
      name: "created",
      Name: "Created",
      NAME: "CREATED",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Datetime of the payment was created, in UNIX timestamp format"
    }
  }

  cmd: {}

  id: {
    name: "id",
    field: "id"
  }

  ancestors: [
    "affiliate"
  ],
  name: "payment",
  Name: "Payment",
  NAME: "PAYMENT",
  "key$": "payment"


}

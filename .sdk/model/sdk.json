{
  "name": "learnworlds",
  "origin": "voxgig-sdk",
  "def": "learnworlds-2.yaml",
  "main": {
    "api": {
      "guide": {
        "control": {
          "transform": {
            "openapi": {
              "order": "\n      top,\n      entity,\n      operation,\n      field,\n      clean,\n      ",
              "element": {
                "top": {},
                "entity": {},
                "operation": {},
                "field": {}
              }
            }
          },
          "builder": {
            "standard": {
              "order": "\n      entity,\n      flow,\n      ",
              "element": {
                "entity": {},
                "flow": {}
              }
            }
          }
        },
        "entity": {}
      },
      "entity": {
        "affiliate": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/affiliates",
              "pathalt": [
                {
                  "path": "/v2/affiliates"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "create": {
              "path": "/v2/affiliates/{id}",
              "pathalt": [
                {
                  "path": "/v2/affiliates/{id}",
                  "id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "affiliate",
          "Name": "Affiliate",
          "NAME": "AFFILIATE",
          "key$": "affiliate"
        },
        "user": {
          "alias": {
            "field": {
              "user_group_id": "id",
              "id": "user_id",
              "user_id": "id"
            }
          },
          "op": {
            "list": {
              "path": "/v2/users/by-segment",
              "pathalt": [
                {
                  "path": "/v2/affiliates/{affiliate_id}/customers",
                  "affiliate_id": true,
                  "space_id": false,
                  "course_id": false,
                  "seat_id": false,
                  "user_group_id": false
                },
                {
                  "path": "/v2/affiliates/{affiliate_id}/leads",
                  "affiliate_id": true,
                  "space_id": false,
                  "course_id": false,
                  "seat_id": false,
                  "user_group_id": false
                },
                {
                  "path": "/v2/community/spaces/{space_id}/users",
                  "space_id": true,
                  "affiliate_id": false,
                  "course_id": false,
                  "seat_id": false,
                  "user_group_id": false
                },
                {
                  "path": "/v2/courses/{course_id}/users",
                  "course_id": true,
                  "affiliate_id": false,
                  "space_id": false,
                  "seat_id": false,
                  "user_group_id": false
                },
                {
                  "path": "/v2/seats/{seat_id}/users",
                  "seat_id": true,
                  "affiliate_id": false,
                  "space_id": false,
                  "course_id": false,
                  "user_group_id": false
                },
                {
                  "path": "/v2/user_groups/{user_group_id}/users",
                  "user_group_id": true,
                  "affiliate_id": false,
                  "space_id": false,
                  "course_id": false,
                  "seat_id": false
                },
                {
                  "path": "/v2/users",
                  "affiliate_id": false,
                  "space_id": false,
                  "course_id": false,
                  "seat_id": false,
                  "user_group_id": false
                },
                {
                  "path": "/v2/users/by-product",
                  "affiliate_id": false,
                  "space_id": false,
                  "course_id": false,
                  "seat_id": false,
                  "user_group_id": false
                },
                {
                  "path": "/v2/users/by-segment",
                  "affiliate_id": false,
                  "space_id": false,
                  "course_id": false,
                  "seat_id": false,
                  "user_group_id": false
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "affiliate_id": {
                  "required": true,
                  "name": "affiliate_id",
                  "Name": "AffiliateId",
                  "NAME": "AFFILIATE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "space_id": {
                  "required": true,
                  "name": "space_id",
                  "Name": "SpaceId",
                  "NAME": "SPACE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "course_id": {
                  "required": true,
                  "name": "course_id",
                  "Name": "CourseId",
                  "NAME": "COURSE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "seat_id": {
                  "required": true,
                  "name": "seat_id",
                  "Name": "SeatId",
                  "NAME": "SEAT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_group_id": {
                  "required": true,
                  "name": "user_group_id",
                  "Name": "UserGroupId",
                  "NAME": "USER_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "segment_id": {
                  "required": true,
                  "name": "segment_id",
                  "Name": "SegmentId",
                  "NAME": "SEGMENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "segment_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "create": {
              "path": "/v2/users",
              "pathalt": [
                {
                  "path": "/v2/seats/{seat_id}/users/{uid}",
                  "seat_id": true,
                  "uid": true,
                  "space_id": false,
                  "user_group_id": false
                },
                {
                  "path": "/v2/user_groups/{user_group_id}/users/{uid}",
                  "user_group_id": true,
                  "uid": true,
                  "space_id": false,
                  "seat_id": false
                },
                {
                  "path": "/v2/community/spaces/{space_id}/users",
                  "space_id": true,
                  "seat_id": false,
                  "uid": false,
                  "user_group_id": false
                },
                {
                  "path": "/v2/users",
                  "space_id": false,
                  "seat_id": false,
                  "uid": false,
                  "user_group_id": false
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "space_id": {
                  "required": true,
                  "name": "space_id",
                  "Name": "SpaceId",
                  "NAME": "SPACE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "seat_id": {
                  "required": true,
                  "name": "seat_id",
                  "Name": "SeatId",
                  "NAME": "SEAT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "uid": {
                  "required": true,
                  "name": "uid",
                  "Name": "Uid",
                  "NAME": "UID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_group_id": {
                  "required": true,
                  "name": "user_group_id",
                  "Name": "UserGroupId",
                  "NAME": "USER_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            },
            "remove": {
              "path": "/v2/user_groups/{user_group_id}/users/{uid}",
              "pathalt": [
                {
                  "path": "/v2/community/spaces/{space_id}/users/{uid}",
                  "space_id": true,
                  "uid": true,
                  "seat_id": false,
                  "user_group_id": false
                },
                {
                  "path": "/v2/seats/{seat_id}/users/{uid}",
                  "seat_id": true,
                  "uid": true,
                  "space_id": false,
                  "user_group_id": false
                },
                {
                  "path": "/v2/user_groups/{user_group_id}/users/{uid}",
                  "user_group_id": true,
                  "uid": true,
                  "space_id": false,
                  "seat_id": false
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "space_id": {
                  "required": true,
                  "name": "space_id",
                  "Name": "SpaceId",
                  "NAME": "SPACE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "uid": {
                  "required": true,
                  "name": "uid",
                  "Name": "Uid",
                  "NAME": "UID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "seat_id": {
                  "required": true,
                  "name": "seat_id",
                  "Name": "SeatId",
                  "NAME": "SEAT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_group_id": {
                  "required": true,
                  "name": "user_group_id",
                  "Name": "UserGroupId",
                  "NAME": "USER_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "user_group_id": "`$STRING`",
                  "uid": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            },
            "update": {
              "path": "/v2/users/{user_id}/unsuspend",
              "pathalt": [
                {
                  "path": "/v2/users/{id}",
                  "id": true,
                  "user_id": false
                },
                {
                  "path": "/v2/users/{user_id}/suspend",
                  "user_id": true,
                  "id": false
                },
                {
                  "path": "/v2/users/{user_id}/tags",
                  "user_id": true,
                  "id": false
                },
                {
                  "path": "/v2/users/{user_id}/unsuspend",
                  "user_id": true,
                  "id": false
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            },
            "load": {
              "path": "/v2/users/{id}",
              "pathalt": [
                {
                  "path": "/v2/users/{id}",
                  "id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "include_suspended": {
                  "name": "include_suspended",
                  "Name": "IncludeSuspended",
                  "NAME": "INCLUDE_SUSPENDED",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the user "
            },
            "email": {
              "name": "email",
              "Name": "Email",
              "NAME": "EMAIL",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Email account of the user"
            },
            "username": {
              "name": "username",
              "Name": "Username",
              "NAME": "USERNAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Username of the user"
            },
            "subscribed_for_marketing_emails": {
              "name": "subscribed_for_marketing_emails",
              "Name": "SubscribedForMarketingEmails",
              "NAME": "SUBSCRIBED_FOR_MARKETING_EMAILS",
              "type": "boolean",
              "typelist": [
                "boolean",
                "null"
              ],
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Indication about whether the user has agreed to receive marketing emails; true if she has agreed and thus should receive marketing emails, or false if she has not."
            },
            "eu_customer": {
              "name": "eu_customer",
              "Name": "EuCustomer",
              "NAME": "EU_CUSTOMER",
              "type": "boolean",
              "typelist": [
                "boolean",
                "null"
              ],
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Indication about whether the user is located in Europe; true if she is, or false if she is not located in Europe."
            },
            "is_admin": {
              "name": "is_admin",
              "Name": "IsAdmin",
              "NAME": "IS_ADMIN",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Indication about whether the user is an administrator of the school; true if she is, or false if she is not."
            },
            "is_instructor": {
              "name": "is_instructor",
              "Name": "IsInstructor",
              "NAME": "IS_INSTRUCTOR",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Indication about whether the user is an instructor in the school; true if she is, or false if she is not."
            },
            "is_suspended": {
              "name": "is_suspended",
              "Name": "IsSuspended",
              "NAME": "IS_SUSPENDED",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Indication about whether the user is suspended in the school; true if she is, or false if she is not."
            },
            "is_reporter": {
              "name": "is_reporter",
              "Name": "IsReporter",
              "NAME": "IS_REPORTER",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Indication about whether the user is an reporter in the school; true if she is, or false if she is not."
            },
            "role": {
              "name": "role",
              "Name": "Role",
              "NAME": "ROLE",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Values of the role fields for this user"
            },
            "is_affiliate": {
              "name": "is_affiliate",
              "Name": "IsAffiliate",
              "NAME": "IS_AFFILIATE",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Indication about whether the user is an affiliate of the school; true if she is, or false if she is not."
            },
            "referrer_id": {
              "name": "referrer_id",
              "Name": "ReferrerId",
              "NAME": "REFERRER_ID",
              "type": "string",
              "typelist": [
                "string",
                "null"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique user id of the referrer for this user"
            },
            "last_login": {
              "name": "last_login",
              "Name": "LastLogin",
              "NAME": "LAST_LOGIN",
              "type": "number",
              "typelist": [
                "null",
                "number"
              ],
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date of the last login of the user, in UNIX timestamp format"
            },
            "signup_approval_status": {
              "name": "signup_approval_status",
              "Name": "SignupApprovalStatus",
              "NAME": "SIGNUP_APPROVAL_STATUS",
              "type": "string",
              "typelist": [
                "string",
                "null"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "User status regarding the Signup Approval flow"
            },
            "created": {
              "name": "created",
              "Name": "Created",
              "NAME": "CREATED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the user was created, in UNIX timestamp format"
            },
            "fields": {
              "name": "fields",
              "Name": "Fields",
              "NAME": "FIELDS",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Default sign up fields for the School. If custom sign up fields are enabled within the school settings, they are going to be included here too."
            },
            "tags": {
              "name": "tags",
              "Name": "Tags",
              "NAME": "TAGS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Array of the tags of the user"
            },
            "utms": {
              "name": "utms",
              "Name": "Utms",
              "NAME": "UTMS",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Values of the UTM fields for this user"
            },
            "billing_info": {
              "name": "billing_info",
              "Name": "BillingInfo",
              "NAME": "BILLING_INFO",
              "type": "object",
              "typelist": [
                "object",
                "null"
              ],
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Values of the billing info fields for this user"
            },
            "nps_score": {
              "name": "nps_score",
              "Name": "NpsScore",
              "NAME": "NPS_SCORE",
              "type": "integer",
              "typelist": [
                "integer",
                "null"
              ],
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "The latest NPS score submitted by the user. (1-10)"
            },
            "nps_comment": {
              "name": "nps_comment",
              "Name": "NpsComment",
              "NAME": "NPS_COMMENT",
              "type": "string",
              "typelist": [
                "string",
                "null"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "The latest comment submitted by the user on the NPS form."
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "affiliate"
          ],
          "name": "user",
          "Name": "User",
          "NAME": "USER",
          "key$": "user"
        },
        "payment": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/payments",
              "pathalt": [
                {
                  "path": "/v2/affiliates/{affiliate_id}/payments",
                  "affiliate_id": true
                },
                {
                  "path": "/v2/payments",
                  "affiliate_id": false
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "affiliate_id": {
                  "required": true,
                  "name": "affiliate_id",
                  "Name": "AffiliateId",
                  "NAME": "AFFILIATE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "product_type": {
                  "name": "product_type",
                  "Name": "ProductType",
                  "NAME": "PRODUCT_TYPE",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_id": {
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "affiliate_id": {
                  "name": "affiliate_id",
                  "Name": "AffiliateId",
                  "NAME": "AFFILIATE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "product_id": {
                  "name": "product_id",
                  "Name": "ProductId",
                  "NAME": "PRODUCT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "items_per_page": {
                  "name": "items_per_page",
                  "Name": "ItemsPerPage",
                  "NAME": "ITEMS_PER_PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "created_before": {
                  "name": "created_before",
                  "Name": "CreatedBefore",
                  "NAME": "CREATED_BEFORE",
                  "type": "number",
                  "Type": "Number",
                  "TYPE": "NUMBER"
                },
                "created_after": {
                  "name": "created_after",
                  "Name": "CreatedAfter",
                  "NAME": "CREATED_AFTER",
                  "type": "number",
                  "Type": "Number",
                  "TYPE": "NUMBER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "load": {
              "path": "/v2/payments/{id}",
              "pathalt": [
                {
                  "path": "/v2/payments/{id}",
                  "id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the payment"
            },
            "transaction_id": {
              "name": "transaction_id",
              "Name": "TransactionId",
              "NAME": "TRANSACTION_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Transaction id of the payment"
            },
            "type": {
              "name": "type",
              "Name": "Type",
              "NAME": "TYPE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Type of the payment"
            },
            "product": {
              "name": "product",
              "Name": "Product",
              "NAME": "PRODUCT",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Related product data"
            },
            "price": {
              "name": "price",
              "Name": "Price",
              "NAME": "PRICE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Price of the payment"
            },
            "discount": {
              "name": "discount",
              "Name": "Discount",
              "NAME": "DISCOUNT",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Discount of the payment"
            },
            "refund_at": {
              "name": "refund_at",
              "Name": "RefundAt",
              "NAME": "REFUND_AT",
              "type": "number",
              "typelist": [
                "null",
                "number"
              ],
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Refund date, in UNIX timestamp format"
            },
            "user_id": {
              "name": "user_id",
              "Name": "UserId",
              "NAME": "USER_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the user"
            },
            "paid_at": {
              "name": "paid_at",
              "Name": "PaidAt",
              "NAME": "PAID_AT",
              "type": "number",
              "typelist": [
                "number",
                "null"
              ],
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Payment date, in UNIX timestamp format"
            },
            "invoice": {
              "name": "invoice",
              "Name": "Invoice",
              "NAME": "INVOICE",
              "type": "string",
              "typelist": [
                "null",
                "string"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Invoice identifier"
            },
            "billing_info": {
              "name": "billing_info",
              "Name": "BillingInfo",
              "NAME": "BILLING_INFO",
              "type": "object",
              "typelist": [
                "null",
                "object"
              ],
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Billing info of the payment"
            },
            "coupon": {
              "name": "coupon",
              "Name": "Coupon",
              "NAME": "COUPON",
              "type": "string",
              "typelist": [
                "null",
                "string"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Coupon code"
            },
            "instructors": {
              "name": "instructors",
              "Name": "Instructors",
              "NAME": "INSTRUCTORS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Related instructor data"
            },
            "instructors_total_percentage": {
              "name": "instructors_total_percentage",
              "Name": "InstructorsTotalPercentage",
              "NAME": "INSTRUCTORS_TOTAL_PERCENTAGE",
              "type": "number",
              "typelist": [
                "null",
                "number"
              ],
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Total percentage of the revenue for the instructor"
            },
            "tax_amount": {
              "name": "tax_amount",
              "Name": "TaxAmount",
              "NAME": "TAX_AMOUNT",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Tax amount of the payment"
            },
            "tax_percentage": {
              "name": "tax_percentage",
              "Name": "TaxPercentage",
              "NAME": "TAX_PERCENTAGE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Tax percentage of the payment"
            },
            "affiliate": {
              "name": "affiliate",
              "Name": "Affiliate",
              "NAME": "AFFILIATE",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Related affiliate data"
            },
            "period": {
              "name": "period",
              "Name": "Period",
              "NAME": "PERIOD",
              "type": "string",
              "typelist": [
                "null",
                "string"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Payment plan period"
            },
            "payment_plan_current_payment": {
              "name": "payment_plan_current_payment",
              "Name": "PaymentPlanCurrentPayment",
              "NAME": "PAYMENT_PLAN_CURRENT_PAYMENT",
              "type": "integer",
              "typelist": [
                "integer",
                "null"
              ],
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Current payment number of payment plan"
            },
            "payment_plan_total_payments": {
              "name": "payment_plan_total_payments",
              "Name": "PaymentPlanTotalPayments",
              "NAME": "PAYMENT_PLAN_TOTAL_PAYMENTS",
              "type": "integer",
              "typelist": [
                "integer",
                "null"
              ],
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Total payments number of payment plan"
            },
            "gateway": {
              "name": "gateway",
              "Name": "Gateway",
              "NAME": "GATEWAY",
              "type": "string",
              "typelist": [
                "null",
                "string"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Payment gateway name"
            },
            "created": {
              "name": "created",
              "Name": "Created",
              "NAME": "CREATED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Datetime of the payment was created, in UNIX timestamp format"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "affiliate"
          ],
          "name": "payment",
          "Name": "Payment",
          "NAME": "PAYMENT",
          "key$": "payment"
        },
        "payout_completed": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/affiliates/{affiliate_id}/payouts/completed",
              "pathalt": [
                {
                  "path": "/v2/affiliates/{affiliate_id}/payouts/completed",
                  "affiliate_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "affiliate_id": {
                  "required": true,
                  "name": "affiliate_id",
                  "Name": "AffiliateId",
                  "NAME": "AFFILIATE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "affiliate_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "affiliate"
          ],
          "name": "payout_completed",
          "Name": "PayoutCompleted",
          "NAME": "PAYOUT_COMPLETED",
          "key$": "payout_completed"
        },
        "payout_due": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/affiliates/{affiliate_id}/payouts/due",
              "pathalt": [
                {
                  "path": "/v2/affiliates/{affiliate_id}/payouts/due",
                  "affiliate_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "affiliate_id": {
                  "required": true,
                  "name": "affiliate_id",
                  "Name": "AffiliateId",
                  "NAME": "AFFILIATE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "affiliate_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "affiliate"
          ],
          "name": "payout_due",
          "Name": "PayoutDue",
          "NAME": "PAYOUT_DUE",
          "key$": "payout_due"
        },
        "payout_due_upcoming": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/affiliates/{affiliate_id}/payouts/upcoming",
              "pathalt": [
                {
                  "path": "/v2/affiliates/{affiliate_id}/payouts/upcoming",
                  "affiliate_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "affiliate_id": {
                  "required": true,
                  "name": "affiliate_id",
                  "Name": "AffiliateId",
                  "NAME": "AFFILIATE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "affiliate_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "affiliate"
          ],
          "name": "payout_due_upcoming",
          "Name": "PayoutDueUpcoming",
          "NAME": "PAYOUT_DUE_UPCOMING",
          "key$": "payout_due_upcoming"
        },
        "user_response": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/v2/assessments/scores/{score_id}/review",
              "pathalt": [
                {
                  "path": "/v2/assessments/scores/{score_id}/review",
                  "score_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "score_id": {
                  "required": true,
                  "name": "score_id",
                  "Name": "ScoreId",
                  "NAME": "SCORE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "undefined": {
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "score_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            },
            "list": {
              "path": "/v2/forms/{form_id}/responses",
              "pathalt": [
                {
                  "path": "/v2/assessments/{assessment_id}/responses",
                  "assessment_id": true,
                  "form_id": false
                },
                {
                  "path": "/v2/forms/{form_id}/responses",
                  "form_id": true,
                  "assessment_id": false
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "assessment_id": {
                  "required": true,
                  "name": "assessment_id",
                  "Name": "AssessmentId",
                  "NAME": "ASSESSMENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "form_id": {
                  "required": true,
                  "name": "form_id",
                  "Name": "FormId",
                  "NAME": "FORM_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "users": {
                  "name": "users",
                  "Name": "Users",
                  "NAME": "USERS",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "items_per_page": {
                  "name": "items_per_page",
                  "Name": "ItemsPerPage",
                  "NAME": "ITEMS_PER_PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "form_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "score"
          ],
          "name": "user_response",
          "Name": "UserResponse",
          "NAME": "USER_RESPONSE",
          "key$": "user_response"
        },
        "bundle": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/bundles",
              "pathalt": [
                {
                  "path": "/v2/bundles"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "load": {
              "path": "/v2/bundles/{id}",
              "pathalt": [
                {
                  "path": "/v2/bundles/{id}",
                  "id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the bundle"
            },
            "title": {
              "name": "title",
              "Name": "Title",
              "NAME": "TITLE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Title of the bundle"
            },
            "products": {
              "name": "products",
              "Name": "Products",
              "NAME": "PRODUCTS",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Products in the bundle"
            },
            "image": {
              "name": "image",
              "Name": "Image",
              "NAME": "IMAGE",
              "type": "string",
              "typelist": [
                "null",
                "string"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Bundle image (full URL)"
            },
            "description": {
              "name": "description",
              "Name": "Description",
              "NAME": "DESCRIPTION",
              "type": "string",
              "typelist": [
                "string",
                "null"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Bundle description"
            },
            "access": {
              "name": "access",
              "Name": "Access",
              "NAME": "ACCESS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Access type of the bundle"
            },
            "created": {
              "name": "created",
              "Name": "Created",
              "NAME": "CREATED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the bundle was created, in UNIX timestamp format"
            },
            "modified": {
              "name": "modified",
              "Name": "Modified",
              "NAME": "MODIFIED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the bundle was modified for the last time, in UNIX timestamp format"
            },
            "afterPurchase": {
              "name": "afterpurchase",
              "Name": "AfterPurchase",
              "NAME": "AFTERPURCHASE",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "After purchase navigation settings for this bundle"
            },
            "price": {
              "name": "price",
              "Name": "Price",
              "NAME": "PRICE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Price of the bundle"
            },
            "paymentPlans": {
              "name": "paymentplans",
              "Name": "PaymentPlans",
              "NAME": "PAYMENTPLANS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Payment plans associated with the bundle. Customers can pay in two or more installments (and an optional upfront payment)."
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "bundle",
          "Name": "Bundle",
          "NAME": "BUNDLE",
          "key$": "bundle"
        },
        "certificate": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/certificates",
              "pathalt": [
                {
                  "path": "/v2/certificates"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "course_id": {
                  "name": "course_id",
                  "Name": "CourseId",
                  "NAME": "COURSE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_id": {
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "update": {
              "path": "/v2/certificates/{id}",
              "pathalt": [
                {
                  "path": "/v2/certificates/{id}",
                  "id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            },
            "remove": {
              "path": "/v2/certificates/{id}",
              "pathalt": [
                {
                  "path": "/v2/certificates/{id}",
                  "id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "certificate",
          "Name": "Certificate",
          "NAME": "CERTIFICATE",
          "key$": "certificate"
        },
        "community_collection": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/community/collections",
              "pathalt": [
                {
                  "path": "/v2/community/collections"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Lw-Client": "`$STRING`",
                  "Authorization": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "community_collection",
          "Name": "CommunityCollection",
          "NAME": "COMMUNITY_COLLECTION",
          "key$": "community_collection"
        },
        "community_post": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/community/posts",
              "pathalt": [
                {
                  "path": "/v2/community/posts"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_id": {
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "space_id": {
                  "name": "space_id",
                  "Name": "SpaceId",
                  "NAME": "SPACE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "course_id": {
                  "name": "course_id",
                  "Name": "CourseId",
                  "NAME": "COURSE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "mentions": {
                  "name": "mentions",
                  "Name": "Mentions",
                  "NAME": "MENTIONS",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "items_per_page": {
                  "name": "items_per_page",
                  "Name": "ItemsPerPage",
                  "NAME": "ITEMS_PER_PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Lw-Client": "`$STRING`",
                  "Authorization": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "load": {
              "path": "/v2/community/posts/{id}",
              "pathalt": [
                {
                  "path": "/v2/community/posts/{id}",
                  "id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Lw-Client": "`$STRING`",
                  "Authorization": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the post"
            },
            "posted_in": {
              "name": "posted_in",
              "Name": "PostedIn",
              "NAME": "POSTED_IN",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Information about where the post was made"
            },
            "user": {
              "name": "user",
              "Name": "User",
              "NAME": "USER",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Information about the post author"
            },
            "text": {
              "name": "text",
              "Name": "Text",
              "NAME": "TEXT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Text content of the post"
            },
            "mentions": {
              "name": "mentions",
              "Name": "Mentions",
              "NAME": "MENTIONS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "User mentions of the post"
            },
            "likes": {
              "name": "likes",
              "Name": "Likes",
              "NAME": "LIKES",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "List of users who have liked the post"
            },
            "upvotes": {
              "name": "upvotes",
              "Name": "Upvotes",
              "NAME": "UPVOTES",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "List of users who have upvoted the post"
            },
            "items": {
              "name": "items",
              "Name": "Items",
              "NAME": "ITEMS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "List of post content items outside of text content"
            },
            "created": {
              "name": "created",
              "Name": "Created",
              "NAME": "CREATED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the post was made, in UNIX timestamp format"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "community_post",
          "Name": "CommunityPost",
          "NAME": "COMMUNITY_POST",
          "key$": "community_post"
        },
        "community_space": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/community/spaces",
              "pathalt": [
                {
                  "path": "/v2/community/spaces"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "access": {
                  "name": "access",
                  "Name": "Access",
                  "NAME": "ACCESS",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "collectionId": {
                  "name": "collectionid",
                  "Name": "CollectionId",
                  "NAME": "COLLECTIONID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "usages": {
                  "name": "usages",
                  "Name": "Usages",
                  "NAME": "USAGES",
                  "type": "array",
                  "Type": "Array",
                  "TYPE": "ARRAY"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "items_per_page": {
                  "name": "items_per_page",
                  "Name": "ItemsPerPage",
                  "NAME": "ITEMS_PER_PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Lw-Client": "`$STRING`",
                  "Authorization": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "create": {
              "path": "/v2/community/spaces",
              "pathalt": [
                {
                  "path": "/v2/community/spaces"
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {},
              "query": {
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "Lw-Client": "`$STRING`",
                  "Authorization": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            },
            "load": {
              "path": "/v2/community/spaces/{id}",
              "pathalt": [
                {
                  "path": "/v2/community/spaces/{id}",
                  "id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Lw-Client": "`$STRING`",
                  "Authorization": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "update": {
              "path": "/v2/community/spaces/{id}",
              "pathalt": [
                {
                  "path": "/v2/community/spaces/{id}",
                  "id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the space"
            },
            "title": {
              "name": "title",
              "Name": "Title",
              "NAME": "TITLE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Name of the space"
            },
            "description": {
              "name": "description",
              "Name": "Description",
              "NAME": "DESCRIPTION",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Description of the space"
            },
            "access": {
              "name": "access",
              "Name": "Access",
              "NAME": "ACCESS",
              "type": "string",
              "enum": [
                "public",
                "private",
                "standalone"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Access type of the space\n"
            },
            "owner": {
              "name": "owner",
              "Name": "Owner",
              "NAME": "OWNER",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Information about the space owner"
            },
            "usages": {
              "name": "usages",
              "Name": "Usages",
              "NAME": "USAGES",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "List of space usages in the platform"
            },
            "hidden_from_community": {
              "name": "hidden_from_community",
              "Name": "HiddenFromCommunity",
              "NAME": "HIDDEN_FROM_COMMUNITY",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Indication about whether the space is visible in the community"
            },
            "is_invitation_required": {
              "name": "is_invitation_required",
              "Name": "IsInvitationRequired",
              "NAME": "IS_INVITATION_REQUIRED",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Indication about whether users are sent an invitation to join or are directly added to space\n"
            },
            "is_members_allowed_to_view_members": {
              "name": "is_members_allowed_to_view_members",
              "Name": "IsMembersAllowedToViewMembers",
              "NAME": "IS_MEMBERS_ALLOWED_TO_VIEW_MEMBERS",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Indication about whether users can view other users in space"
            },
            "collectionId": {
              "name": "collectionid",
              "Name": "CollectionId",
              "NAME": "COLLECTIONID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the collection under which the space is displayed"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "community_space",
          "Name": "CommunitySpace",
          "NAME": "COMMUNITY_SPACE",
          "key$": "community_space"
        },
        "space": {
          "alias": {
            "field": {}
          },
          "op": {
            "remove": {
              "path": "/v2/community/spaces/{id}",
              "pathalt": [
                {
                  "path": "/v2/community/spaces/{id}",
                  "id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Lw-Client": "`$STRING`",
                  "Authorization": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "space",
          "Name": "Space",
          "NAME": "SPACE",
          "key$": "space"
        },
        "course": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/courses",
              "pathalt": [
                {
                  "path": "/v2/courses"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "categories": {
                  "name": "categories",
                  "Name": "Categories",
                  "NAME": "CATEGORIES",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "access": {
                  "name": "access",
                  "Name": "Access",
                  "NAME": "ACCESS",
                  "type": "array",
                  "Type": "Array",
                  "TYPE": "ARRAY"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Lw-Client": "`$STRING`",
                  "Authorization": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "create": {
              "path": "/v2/courses",
              "pathalt": [
                {
                  "path": "/v2/courses"
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {},
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            },
            "load": {
              "path": "/v2/courses/{id}",
              "pathalt": [
                {
                  "path": "/v2/courses/{id}",
                  "id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "update": {
              "path": "/v2/courses/{id}",
              "pathalt": [
                {
                  "path": "/v2/courses/{id}",
                  "id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the course"
            },
            "title": {
              "name": "title",
              "Name": "Title",
              "NAME": "TITLE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Title of the course"
            },
            "expires": {
              "name": "expires",
              "Name": "Expires",
              "NAME": "EXPIRES",
              "type": "integer",
              "typelist": [
                "null",
                "integer"
              ],
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Expiration timeframe value, defines the expiration timeframe, together with the type / unit in the \"expiresType\" field."
            },
            "expiresType": {
              "name": "expirestype",
              "Name": "ExpiresType",
              "NAME": "EXPIRESTYPE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Expiration timeframe type / unit, defines the expiration timeframe, together with the actual value in the \"expires\" field. "
            },
            "afterPurchase": {
              "name": "afterpurchase",
              "Name": "AfterPurchase",
              "NAME": "AFTERPURCHASE",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "After purchase navigation settings for this course"
            },
            "categories": {
              "name": "categories",
              "Name": "Categories",
              "NAME": "CATEGORIES",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Categories this course belongs in"
            },
            "description": {
              "name": "description",
              "Name": "Description",
              "NAME": "DESCRIPTION",
              "type": "string",
              "typelist": [
                "string",
                "null"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Description of the course"
            },
            "label": {
              "name": "label",
              "Name": "Label",
              "NAME": "LABEL",
              "type": "string",
              "typelist": [
                "null",
                "string"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Label of the course"
            },
            "author": {
              "name": "author",
              "Name": "Author",
              "NAME": "AUTHOR",
              "type": "object",
              "typelist": [
                "object",
                "null"
              ],
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Information about the course author"
            },
            "courseImage": {
              "name": "courseimage",
              "Name": "CourseImage",
              "NAME": "COURSEIMAGE",
              "type": "string",
              "typelist": [
                "string",
                "null"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Course image (full URL)"
            },
            "original_price": {
              "name": "original_price",
              "Name": "OriginalPrice",
              "NAME": "ORIGINAL_PRICE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Original price of the course"
            },
            "discount_price": {
              "name": "discount_price",
              "Name": "DiscountPrice",
              "NAME": "DISCOUNT_PRICE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Discount price of the course"
            },
            "final_price": {
              "name": "final_price",
              "Name": "FinalPrice",
              "NAME": "FINAL_PRICE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Final price of the course"
            },
            "dripFeed": {
              "name": "dripfeed",
              "Name": "DripFeed",
              "NAME": "DRIPFEED",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Course setting for scheduled course delivery (drip feed); none refers to drip feed not being enabled."
            },
            "identifiers": {
              "name": "identifiers",
              "Name": "Identifiers",
              "NAME": "IDENTIFIERS",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Course identifiers for in app purchases."
            },
            "access": {
              "name": "access",
              "Name": "Access",
              "NAME": "ACCESS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Access type of course"
            },
            "created": {
              "name": "created",
              "Name": "Created",
              "NAME": "CREATED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the course was created, in UNIX timestamp format"
            },
            "modified": {
              "name": "modified",
              "Name": "Modified",
              "NAME": "MODIFIED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the course was modified for the last time, in UNIX timestamp format"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "course",
          "Name": "Course",
          "NAME": "COURSE",
          "key$": "course"
        },
        "course_analytic": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/v2/courses/{course_id}/analytics",
              "pathalt": [
                {
                  "path": "/v2/courses/{course_id}/analytics",
                  "course_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "course_id": {
                  "required": true,
                  "name": "course_id",
                  "Name": "CourseId",
                  "NAME": "COURSE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "course_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "students": {
              "name": "students",
              "Name": "Students",
              "NAME": "STUDENTS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Number of students"
            },
            "videos": {
              "name": "videos",
              "Name": "Videos",
              "NAME": "VIDEOS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Number of videos"
            },
            "learning_units": {
              "name": "learning_units",
              "Name": "LearningUnits",
              "NAME": "LEARNING_UNITS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Number of learning activities"
            },
            "video_time": {
              "name": "video_time",
              "Name": "VideoTime",
              "NAME": "VIDEO_TIME",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Total video duration of the course in seconds"
            },
            "video_viewing_time": {
              "name": "video_viewing_time",
              "Name": "VideoViewingTime",
              "NAME": "VIDEO_VIEWING_TIME",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Total video time viewed"
            },
            "avg_score_rate": {
              "name": "avg_score_rate",
              "Name": "AvgScoreRate",
              "NAME": "AVG_SCORE_RATE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Average score (%)"
            },
            "success_rate": {
              "name": "success_rate",
              "Name": "SuccessRate",
              "NAME": "SUCCESS_RATE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Success rate (%)"
            },
            "total_study_time": {
              "name": "total_study_time",
              "Name": "TotalStudyTime",
              "NAME": "TOTAL_STUDY_TIME",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Total study time in seconds"
            },
            "avg_time_to_finish": {
              "name": "avg_time_to_finish",
              "Name": "AvgTimeToFinish",
              "NAME": "AVG_TIME_TO_FINISH",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Average time to finish the course in seconds"
            },
            "social_interactions": {
              "name": "social_interactions",
              "Name": "SocialInteractions",
              "NAME": "SOCIAL_INTERACTIONS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Number of social interactions "
            },
            "certificates_issued": {
              "name": "certificates_issued",
              "Name": "CertificatesIssued",
              "NAME": "CERTIFICATES_ISSUED",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Number of issued certifications"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "course"
          ],
          "name": "course_analytic",
          "Name": "CourseAnalytic",
          "NAME": "COURSE_ANALYTIC",
          "key$": "course_analytic"
        },
        "course_content": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/v2/courses/{course_id}/contents",
              "pathalt": [
                {
                  "path": "/v2/courses/{course_id}/contents",
                  "course_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "course_id": {
                  "required": true,
                  "name": "course_id",
                  "Name": "CourseId",
                  "NAME": "COURSE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "course_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "create": {
              "path": "/v2/courses/{course_id}/sections",
              "pathalt": [
                {
                  "path": "/v2/courses/{course_id}/sections",
                  "course_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "course_id": {
                  "required": true,
                  "name": "course_id",
                  "Name": "CourseId",
                  "NAME": "COURSE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "course_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the course"
            },
            "title": {
              "name": "title",
              "Name": "Title",
              "NAME": "TITLE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Title of the course"
            },
            "sections": {
              "name": "sections",
              "Name": "Sections",
              "NAME": "SECTIONS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Sections of the course"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "course"
          ],
          "name": "course_content",
          "Name": "CourseContent",
          "NAME": "COURSE_CONTENT",
          "key$": "course_content"
        },
        "grade": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/courses/{course_id}/grades",
              "pathalt": [
                {
                  "path": "/v2/courses/{course_id}/grades",
                  "course_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "course_id": {
                  "required": true,
                  "name": "course_id",
                  "Name": "CourseId",
                  "NAME": "COURSE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "users": {
                  "name": "users",
                  "Name": "Users",
                  "NAME": "USERS",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "learningUnits": {
                  "name": "learningunits",
                  "Name": "LearningUnits",
                  "NAME": "LEARNINGUNITS",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "items_per_page": {
                  "name": "items_per_page",
                  "Name": "ItemsPerPage",
                  "NAME": "ITEMS_PER_PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "sort": {
                  "name": "sort",
                  "Name": "Sort",
                  "NAME": "SORT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "order": {
                  "name": "order",
                  "Name": "Order",
                  "NAME": "ORDER",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "course_id": "`$STRING`",
                  "Lw-Client": "`$STRING`",
                  "Authorization": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "course"
          ],
          "name": "grade",
          "Name": "Grade",
          "NAME": "GRADE",
          "key$": "grade"
        },
        "unit_analytic": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/v2/courses/{course_id}/units/{uid}/analytics",
              "pathalt": [
                {
                  "path": "/v2/courses/{course_id}/units/{uid}/analytics",
                  "course_id": true,
                  "uid": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "course_id": {
                  "required": true,
                  "name": "course_id",
                  "Name": "CourseId",
                  "NAME": "COURSE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "uid": {
                  "required": true,
                  "name": "uid",
                  "Name": "Uid",
                  "NAME": "UID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "course_id": "`$STRING`",
                  "uid": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "type": {
              "name": "type",
              "Name": "Type",
              "NAME": "TYPE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Type of the learning activity"
            },
            "name": {
              "name": "name",
              "Name": "Name",
              "NAME": "NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Name of the learning activity"
            },
            "users_completed": {
              "name": "users_completed",
              "Name": "UsersCompleted",
              "NAME": "USERS_COMPLETED",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Number of users that have completed this learning activity"
            },
            "viewers": {
              "name": "viewers",
              "Name": "Viewers",
              "NAME": "VIEWERS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Number of users that have viewed this learning activity"
            },
            "avg_study_time": {
              "name": "avg_study_time",
              "Name": "AvgStudyTime",
              "NAME": "AVG_STUDY_TIME",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Average study time in seconds"
            },
            "total_study_time": {
              "name": "total_study_time",
              "Name": "TotalStudyTime",
              "NAME": "TOTAL_STUDY_TIME",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Total study time in seconds"
            },
            "avg_score_rate": {
              "name": "avg_score_rate",
              "Name": "AvgScoreRate",
              "NAME": "AVG_SCORE_RATE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Average score (%)"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "course",
            "unit"
          ],
          "name": "unit_analytic",
          "Name": "UnitAnalytic",
          "NAME": "UNIT_ANALYTIC",
          "key$": "unit_analytic"
        },
        "event_log": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/event-logs",
              "pathalt": [
                {
                  "path": "/v2/event-logs"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_id": {
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "activity": {
                  "name": "activity",
                  "Name": "Activity",
                  "NAME": "ACTIVITY",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "created_after": {
                  "name": "created_after",
                  "Name": "CreatedAfter",
                  "NAME": "CREATED_AFTER",
                  "type": "number",
                  "Type": "Number",
                  "TYPE": "NUMBER"
                },
                "created_before": {
                  "name": "created_before",
                  "Name": "CreatedBefore",
                  "NAME": "CREATED_BEFORE",
                  "type": "number",
                  "Type": "Number",
                  "TYPE": "NUMBER"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "sort": {
                  "name": "sort",
                  "Name": "Sort",
                  "NAME": "SORT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Lw-Client": "`$STRING`",
                  "Authorization": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "event_log",
          "Name": "EventLog",
          "NAME": "EVENT_LOG",
          "key$": "event_log"
        },
        "installment": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/installments/active",
              "pathalt": [
                {
                  "path": "/v2/installments/active"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "product_id": {
                  "name": "product_id",
                  "Name": "ProductId",
                  "NAME": "PRODUCT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_id": {
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "product_type": {
                  "name": "product_type",
                  "Name": "ProductType",
                  "NAME": "PRODUCT_TYPE",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "installment",
          "Name": "Installment",
          "NAME": "INSTALLMENT",
          "key$": "installment"
        },
        "lead": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/leads",
              "pathalt": [
                {
                  "path": "/v2/leads"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "lead",
          "Name": "Lead",
          "NAME": "LEAD",
          "key$": "lead"
        },
        "invoice_link": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/v2/payments/{payment_id}/invoice-link",
              "pathalt": [
                {
                  "path": "/v2/payments/{payment_id}/invoice-link",
                  "payment_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "payment_id": {
                  "required": true,
                  "name": "payment_id",
                  "Name": "PaymentId",
                  "NAME": "PAYMENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "payment_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "invoice": {
              "name": "invoice",
              "Name": "Invoice",
              "NAME": "INVOICE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Invoice identifier"
            },
            "url": {
              "name": "url",
              "Name": "Url",
              "NAME": "URL",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Url of invoice"
            },
            "expires_at": {
              "name": "expires_at",
              "Name": "ExpiresAt",
              "NAME": "EXPIRES_AT",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the invoice expires, in UNIX timestamp format"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "payment"
          ],
          "name": "invoice_link",
          "Name": "InvoiceLink",
          "NAME": "INVOICE_LINK",
          "key$": "invoice_link"
        },
        "promotion": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/promotions",
              "pathalt": [
                {
                  "path": "/v2/promotions"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "create": {
              "path": "/v2/promotions",
              "pathalt": [
                {
                  "path": "/v2/promotions"
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {},
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            },
            "load": {
              "path": "/v2/promotions/{id}",
              "pathalt": [
                {
                  "path": "/v2/promotions/{id}",
                  "id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the promotion"
            },
            "name": {
              "name": "name",
              "Name": "Name",
              "NAME": "NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Name of the promotion"
            },
            "coupons": {
              "name": "coupons",
              "Name": "Coupons",
              "NAME": "COUPONS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Promotion coupons"
            },
            "applies_to_all": {
              "name": "applies_to_all",
              "Name": "AppliesToAll",
              "NAME": "APPLIES_TO_ALL",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "All courses and/or bundles that the promotion coupon will be applied to. None indicates that the coupon will not be applied to any course/bundle"
            },
            "products": {
              "name": "products",
              "Name": "Products",
              "NAME": "PRODUCTS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Specific products that the promotion coupon will be applied to"
            },
            "type": {
              "name": "type",
              "Name": "Type",
              "NAME": "TYPE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Type of discount"
            },
            "value": {
              "name": "value",
              "Name": "Value",
              "NAME": "VALUE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Percentage or fixed amount of discount"
            },
            "created": {
              "name": "created",
              "Name": "Created",
              "NAME": "CREATED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the promotion was created, in UNIX timestamp format"
            },
            "modified": {
              "name": "modified",
              "Name": "Modified",
              "NAME": "MODIFIED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the promotion was modified for the last time, in UNIX timestamp format"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "promotion",
          "Name": "Promotion",
          "NAME": "PROMOTION",
          "key$": "promotion"
        },
        "coupon": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/promotions/{pid}/coupons",
              "pathalt": [
                {
                  "path": "/v2/promotions/{pid}/coupons",
                  "pid": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "pid": {
                  "required": true,
                  "name": "pid",
                  "Name": "Pid",
                  "NAME": "PID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "pid": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "create": {
              "path": "/v2/promotions/{promotion_id}/coupons-bulk",
              "pathalt": [
                {
                  "path": "/v2/promotions/{pid}/coupons",
                  "pid": true,
                  "promotion_id": false
                },
                {
                  "path": "/v2/promotions/{promotion_id}/coupons-bulk",
                  "promotion_id": true,
                  "pid": false
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "pid": {
                  "required": true,
                  "name": "pid",
                  "Name": "Pid",
                  "NAME": "PID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "promotion_id": {
                  "required": true,
                  "name": "promotion_id",
                  "Name": "PromotionId",
                  "NAME": "PROMOTION_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "promotion_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "promotion"
          ],
          "name": "coupon",
          "Name": "Coupon",
          "NAME": "COUPON",
          "key$": "coupon"
        },
        "coupon_usage": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/v2/promotions/{pid}/coupons/{cid}/usage",
              "pathalt": [
                {
                  "path": "/v2/promotions/{pid}/coupons/{cid}/usage",
                  "pid": true,
                  "cid": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "pid": {
                  "required": true,
                  "name": "pid",
                  "Name": "Pid",
                  "NAME": "PID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "cid": {
                  "required": true,
                  "name": "cid",
                  "Name": "Cid",
                  "NAME": "CID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "pid": "`$STRING`",
                  "cid": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "usage": {
              "name": "usage",
              "Name": "Usage",
              "NAME": "USAGE",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": ""
            },
            "payments": {
              "name": "payments",
              "Name": "Payments",
              "NAME": "PAYMENTS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY"
            },
            "meta": {
              "name": "meta",
              "Name": "Meta",
              "NAME": "META",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": ""
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "promotion",
            "coupon"
          ],
          "name": "coupon_usage",
          "Name": "CouponUsage",
          "NAME": "COUPON_USAGE",
          "key$": "coupon_usage"
        },
        "school_event": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/school/events",
              "pathalt": [
                {
                  "path": "/v2/school/events"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "event_type": {
                  "name": "event_type",
                  "Name": "EventType",
                  "NAME": "EVENT_TYPE",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "school_event",
          "Name": "SchoolEvent",
          "NAME": "SCHOOL_EVENT",
          "key$": "school_event"
        },
        "seat": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/seats",
              "pathalt": [
                {
                  "path": "/v2/seats"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "create": {
              "path": "/v2/seats",
              "pathalt": [
                {
                  "path": "/v2/seats"
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {},
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            },
            "load": {
              "path": "/v2/users/{user_id}/seats",
              "pathalt": [
                {
                  "path": "/v2/seats/{id}",
                  "id": true,
                  "user_id": false
                },
                {
                  "path": "/v2/users/{user_id}/seats",
                  "user_id": true,
                  "id": false
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "update": {
              "path": "/v2/seats/{id}",
              "pathalt": [
                {
                  "path": "/v2/seats/{id}",
                  "id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the seat offering."
            },
            "title": {
              "name": "title",
              "Name": "Title",
              "NAME": "TITLE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Title of the seat offering."
            },
            "description": {
              "name": "description",
              "Name": "Description",
              "NAME": "DESCRIPTION",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Description of the seat offering."
            },
            "products": {
              "name": "products",
              "Name": "Products",
              "NAME": "PRODUCTS",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Products in the seat offering"
            },
            "number_of_seats": {
              "name": "number_of_seats",
              "Name": "NumberOfSeats",
              "NAME": "NUMBER_OF_SEATS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Number of the seats in the offering."
            },
            "available_seats": {
              "name": "available_seats",
              "Name": "AvailableSeats",
              "NAME": "AVAILABLE_SEATS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Number of available seats in the offering."
            },
            "max_number_of_users": {
              "name": "max_number_of_users",
              "Name": "MaxNumberOfUsers",
              "NAME": "MAX_NUMBER_OF_USERS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Max number of users who can be added to a seat offering; empty if there is no limit to the number of users who can be added."
            },
            "seat_managers": {
              "name": "seat_managers",
              "Name": "SeatManagers",
              "NAME": "SEAT_MANAGERS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Unique identifier of each seat manager."
            },
            "tags": {
              "name": "tags",
              "Name": "Tags",
              "NAME": "TAGS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Tags assigned to the users added to the seat offering."
            },
            "total_enrollments": {
              "name": "total_enrollments",
              "Name": "TotalEnrollments",
              "NAME": "TOTAL_ENROLLMENTS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Total enrollements of the seat offering."
            },
            "access": {
              "name": "access",
              "Name": "Access",
              "NAME": "ACCESS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Access status of the seat offering."
            },
            "created": {
              "name": "created",
              "Name": "Created",
              "NAME": "CREATED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the seat offering was created; displayed in UNIX timestamp format."
            },
            "modified": {
              "name": "modified",
              "Name": "Modified",
              "NAME": "MODIFIED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the seat offering was modified for the last time; displayed in UNIX timestamp format."
            },
            "active": {
              "name": "active",
              "Name": "Active",
              "NAME": "ACTIVE",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "True or false whether user is active in seat offering"
            },
            "got_seat_on": {
              "name": "got_seat_on",
              "Name": "GotSeatOn",
              "NAME": "GOT_SEAT_ON",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date user was added to the seat offering, in UNIX timestamp"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "seat",
          "Name": "Seat",
          "NAME": "SEAT",
          "key$": "seat"
        },
        "subscription_plan": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/subscription-plans",
              "pathalt": [
                {
                  "path": "/v2/subscription-plans"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "load": {
              "path": "/v2/subscription-plans/{id}",
              "pathalt": [
                {
                  "path": "/v2/subscription-plans/{id}",
                  "id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the subscription plan"
            },
            "title": {
              "name": "title",
              "Name": "Title",
              "NAME": "TITLE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Title of the subscription plan"
            },
            "stripePlanId": {
              "name": "stripeplanid",
              "Name": "StripePlanId",
              "NAME": "STRIPEPLANID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Stripe's plan Id"
            },
            "description": {
              "name": "description",
              "Name": "Description",
              "NAME": "DESCRIPTION",
              "type": "string",
              "typelist": [
                "string",
                "null"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Description of the subscription"
            },
            "products": {
              "name": "products",
              "Name": "Products",
              "NAME": "PRODUCTS",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Products in the subsription"
            },
            "image": {
              "name": "image",
              "Name": "Image",
              "NAME": "IMAGE",
              "type": "string",
              "typelist": [
                "string",
                "null"
              ],
              "Type": "String",
              "TYPE": "STRING",
              "short": "Subscription plan image (full URL)"
            },
            "interval": {
              "name": "interval",
              "Name": "Interval",
              "NAME": "INTERVAL",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Billing interval value"
            },
            "interval_type": {
              "name": "interval_type",
              "Name": "IntervalType",
              "NAME": "INTERVAL_TYPE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Billing interval type"
            },
            "trial_period_days": {
              "name": "trial_period_days",
              "Name": "TrialPeriodDays",
              "NAME": "TRIAL_PERIOD_DAYS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Number of days the trial subscription plan lasts"
            },
            "afterPurchase": {
              "name": "afterpurchase",
              "Name": "AfterPurchase",
              "NAME": "AFTERPURCHASE",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "After purchase navigation settings for this subscription plan"
            },
            "access": {
              "name": "access",
              "Name": "Access",
              "NAME": "ACCESS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Access type of the subscription"
            },
            "created": {
              "name": "created",
              "Name": "Created",
              "NAME": "CREATED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the subscription plan was created, in UNIX timestamp format"
            },
            "modified": {
              "name": "modified",
              "Name": "Modified",
              "NAME": "MODIFIED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the subscription plan was modified for the last time, in UNIX timestamp format"
            },
            "price": {
              "name": "price",
              "Name": "Price",
              "NAME": "PRICE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Price of the subscription plan"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "subscription_plan",
          "Name": "SubscriptionPlan",
          "NAME": "SUBSCRIPTION_PLAN",
          "key$": "subscription_plan"
        },
        "user_role": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/user-roles",
              "pathalt": [
                {
                  "path": "/v2/user-roles"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "role_id": {
                  "name": "role_id",
                  "Name": "RoleId",
                  "NAME": "ROLE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "access_level": {
                  "name": "access_level",
                  "Name": "AccessLevel",
                  "NAME": "ACCESS_LEVEL",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Lw-Client": "`$STRING`",
                  "Authorization": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "load": {
              "path": "/v2/users/{user_id}/user-role",
              "pathalt": [
                {
                  "path": "/v2/users/{user_id}/user-role",
                  "user_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "update": {
              "path": "/v2/users/{user_id}/user-role",
              "pathalt": [
                {
                  "path": "/v2/users/{user_id}/user-role",
                  "user_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "User Id or email (encoded string)"
            },
            "email": {
              "name": "email",
              "Name": "Email",
              "NAME": "EMAIL",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Email account of the user"
            },
            "username": {
              "name": "username",
              "Name": "Username",
              "NAME": "USERNAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Username of the user"
            },
            "role_id": {
              "name": "role_id",
              "Name": "RoleId",
              "NAME": "ROLE_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "User Id or email"
            },
            "user_role": {
              "name": "user_role",
              "Name": "UserRole",
              "NAME": "USER_ROLE",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Values of the role fields for this user"
            },
            "assigned_courses": {
              "name": "assigned_courses",
              "Name": "AssignedCourses",
              "NAME": "ASSIGNED_COURSES",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Courses to be assigned to the instructor; empty if the user is not an instructor or if no courses should be assigned to the user.\n\n**Note**: If left empty, all previously assigned courses will be removed from the instructor."
            },
            "assigned_seat_offering_ids": {
              "name": "assigned_seat_offering_ids",
              "Name": "AssignedSeatOfferingIds",
              "NAME": "ASSIGNED_SEAT_OFFERING_IDS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Unique identifier of the seat offerings to be assigned to the seat manager; empty if the user is not a seat manager or if no offerings should be assigned to the user.\n"
            },
            "assigned_user_group_ids": {
              "name": "assigned_user_group_ids",
              "Name": "AssignedUserGroupIds",
              "NAME": "ASSIGNED_USER_GROUP_IDS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Unique identifier of the user groups to be assigned to the user group manager; empty if the user is not a group manager or if no groups should be assigned to the user.\n\nNote: If left empty, all previously assigned user groups will be removed from the group manager."
            },
            "assigned_segment_id": {
              "name": "assigned_segment_id",
              "Name": "AssignedSegmentId",
              "NAME": "ASSIGNED_SEGMENT_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the segment to be assigned to the reporter; empty if the user is not a reporter or if no segment should be assigned to the user."
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "user_role",
          "Name": "UserRole",
          "NAME": "USER_ROLE",
          "key$": "user_role"
        },
        "user_subscription": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/user-subscriptions",
              "pathalt": [
                {
                  "path": "/v2/user-subscriptions"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "user_id": {
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "status": {
                  "name": "status",
                  "Name": "Status",
                  "NAME": "STATUS",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "user_subscription",
          "Name": "UserSubscription",
          "NAME": "USER_SUBSCRIPTION",
          "key$": "user_subscription"
        },
        "user_group": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/user_groups",
              "pathalt": [
                {
                  "path": "/v2/users/{user_id}/user-groups",
                  "user_id": true
                },
                {
                  "path": "/v2/user_groups",
                  "user_id": false
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "create": {
              "path": "/v2/user_groups",
              "pathalt": [
                {
                  "path": "/v2/user_groups"
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {},
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            },
            "load": {
              "path": "/v2/user_groups/{id}",
              "pathalt": [
                {
                  "path": "/v2/user_groups/{id}",
                  "id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "update": {
              "path": "/v2/user_groups/{id}",
              "pathalt": [
                {
                  "path": "/v2/user_groups/{id}",
                  "id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Unique identifier of the user group."
            },
            "title": {
              "name": "title",
              "Name": "Title",
              "NAME": "TITLE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Title of the user group."
            },
            "description": {
              "name": "description",
              "Name": "Description",
              "NAME": "DESCRIPTION",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Description of the user group."
            },
            "products": {
              "name": "products",
              "Name": "Products",
              "NAME": "PRODUCTS",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Products in the user group"
            },
            "enroll_users_on_courses": {
              "name": "enroll_users_on_courses",
              "Name": "EnrollUsersOnCourses",
              "NAME": "ENROLL_USERS_ON_COURSES",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Enroll users in all selected courses automatically upon joining the user group."
            },
            "group_managers": {
              "name": "group_managers",
              "Name": "GroupManagers",
              "NAME": "GROUP_MANAGERS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Unique identifier of each group manager."
            },
            "tags": {
              "name": "tags",
              "Name": "Tags",
              "NAME": "TAGS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Tags assigned to the users added to the user group."
            },
            "created": {
              "name": "created",
              "Name": "Created",
              "NAME": "CREATED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the user group was created; displayed in UNIX timestamp format."
            },
            "modified": {
              "name": "modified",
              "Name": "Modified",
              "NAME": "MODIFIED",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Date the user group was modified for the last time; displayed in UNIX timestamp format."
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "user_group",
          "Name": "UserGroup",
          "NAME": "USER_GROUP",
          "key$": "user_group"
        },
        "user_segment": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/users/segments",
              "pathalt": [
                {
                  "path": "/v2/users/segments"
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {},
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "user_segment",
          "Name": "UserSegment",
          "NAME": "USER_SEGMENT",
          "key$": "user_segment"
        },
        "enrollment": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/users/{user_id}/courses",
              "pathalt": [
                {
                  "path": "/v2/users/{user_id}/courses",
                  "user_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "create": {
              "path": "/v2/users/{user_id}/enrollment",
              "pathalt": [
                {
                  "path": "/v2/users/{user_id}/enrollment",
                  "user_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.success`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            },
            "remove": {
              "path": "/v2/users/{user_id}/enrollment",
              "pathalt": [
                {
                  "path": "/v2/users/{user_id}/enrollment",
                  "user_id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "user"
          ],
          "name": "enrollment",
          "Name": "Enrollment",
          "NAME": "ENROLLMENT",
          "key$": "enrollment"
        },
        "complete": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/v2/users/{user_id}/courses/{cid}/complete",
              "pathalt": [
                {
                  "path": "/v2/users/{user_id}/courses/{cid}/complete",
                  "user_id": true,
                  "cid": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "cid": {
                  "required": true,
                  "name": "cid",
                  "Name": "Cid",
                  "NAME": "CID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`",
                  "cid": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "user",
            "course"
          ],
          "name": "complete",
          "Name": "Complete",
          "NAME": "COMPLETE",
          "key$": "complete"
        },
        "user_progress": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/v2/users/{user_id}/courses/{cid}/progress",
              "pathalt": [
                {
                  "path": "/v2/users/{user_id}/courses/{cid}/progress",
                  "user_id": true,
                  "cid": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "cid": {
                  "required": true,
                  "name": "cid",
                  "Name": "Cid",
                  "NAME": "CID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`",
                  "cid": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "list": {
              "path": "/v2/users/{user_id}/progress",
              "pathalt": [
                {
                  "path": "/v2/users/{user_id}/progress",
                  "user_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page": {
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "items_per_page": {
                  "name": "items_per_page",
                  "Name": "ItemsPerPage",
                  "NAME": "ITEMS_PER_PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {
            "status": {
              "name": "status",
              "Name": "Status",
              "NAME": "STATUS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Status of user progress"
            },
            "progress_rate": {
              "name": "progress_rate",
              "Name": "ProgressRate",
              "NAME": "PROGRESS_RATE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Progress rate (%)"
            },
            "average_score_rate": {
              "name": "average_score_rate",
              "Name": "AverageScoreRate",
              "NAME": "AVERAGE_SCORE_RATE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Average score percentage"
            },
            "time_on_course": {
              "name": "time_on_course",
              "Name": "TimeOnCourse",
              "NAME": "TIME_ON_COURSE",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Time spent on the course in seconds"
            },
            "total_units": {
              "name": "total_units",
              "Name": "TotalUnits",
              "NAME": "TOTAL_UNITS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Total number of course learning activities "
            },
            "completed_units": {
              "name": "completed_units",
              "Name": "CompletedUnits",
              "NAME": "COMPLETED_UNITS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Total number of completed course learning activities by the user "
            },
            "completed_at": {
              "name": "completed_at",
              "Name": "CompletedAt",
              "NAME": "COMPLETED_AT",
              "type": "number",
              "typelist": [
                "number",
                "null"
              ],
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Completion date in UNIX timestamp format. If status is not_started or not_completed the null value will be returned"
            },
            "progress_per_section_unit": {
              "name": "progress_per_section_unit",
              "Name": "ProgressPerSectionUnit",
              "NAME": "PROGRESS_PER_SECTION_UNIT",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "User progress data per section/learning activity"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "user",
            "course"
          ],
          "name": "user_progress",
          "Name": "UserProgress",
          "NAME": "USER_PROGRESS",
          "key$": "user_progress"
        },
        "reset": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/v2/users/{user_id}/courses/{cid}/reset",
              "pathalt": [
                {
                  "path": "/v2/users/{user_id}/courses/{cid}/reset",
                  "user_id": true,
                  "cid": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "cid": {
                  "required": true,
                  "name": "cid",
                  "Name": "Cid",
                  "NAME": "CID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": {
                "units": "`reqdata`"
              },
              "validate": {
                "params": {
                  "user_id": "`$STRING`",
                  "cid": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "user",
            "course"
          ],
          "name": "reset",
          "Name": "Reset",
          "NAME": "RESET",
          "key$": "reset"
        },
        "product": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/v2/users/{user_id}/products",
              "pathalt": [
                {
                  "path": "/v2/users/{user_id}/products",
                  "user_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "Authorization": {
                  "required": true,
                  "name": "authorization",
                  "Name": "Authorization",
                  "NAME": "AUTHORIZATION",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "Lw-Client": {
                  "required": true,
                  "name": "lw-client",
                  "Name": "LwClient",
                  "NAME": "LW-CLIENT",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "user_id": "`$STRING`",
                  "Authorization": "`$STRING`",
                  "Lw-Client": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "user"
          ],
          "name": "product",
          "Name": "Product",
          "NAME": "PRODUCT",
          "key$": "product"
        }
      }
    },
    "def": {
      "desc": "",
      "info": {
        "title": "API",
        "version": 2,
        "summary": "The public API of LearnWorlds",
        "license": {
          "name": "MIT"
        },
        "description": "## HTTP Methods\n\nThis API uses HTTP verbs (methods) as following:\n\n+ `GET` - *Read* - used to **read** (or retrieve) a representation of a resource,\n+ `POST` - *Create* - used to **create** new resources. In particular, it's used to create subordinate resources.\n+ `PUT` - *Update/Replace* - used for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. On successful request, replaces identified resource with the request body.\n+ `DELETE` - *Delete* - used to **delete** a resource identified by a URI.\n\n---\n\n## Required Headers for all requests\n\n+ Lw-Client: {The school ID}\n+ Authorization : Bearer {token}\n\n---\n\n## Rate Limit\n\nA rate limit is the number of API calls an app can make within a given time period. If this limit is exceeded any extra request will fail and the App will respond with a 429 \"Too many Requests\" error. All API requests are subject to rate limits.\n\n**LearnWorlds has a Rate limit of 30 requests / 10 sec**\n\n---\n\n## Status Codes and Errors\n\nThis API uses HTTP status codes to communicate with the API consumer.\n\n+ `200 OK` - Response to a successful GET, PUT.\n+ `201 Created` - Response to a POST that the resource is succesfully created.\n+ `204 No Content` - Response to a successful request that won't be returning a body (like a DELETE request).\n+ `400 Bad Request` - Bad request\n+ `401 Unauthorized` - When no or invalid authentication details are provided.\n+ `403 Forbidden` - When authentication succeeded but authenticated user doesn't have access to the resource.\n+ `404 Not Found` - When a non-existent resource is requested.\n+ `422 Validation error` - You should check your input again.\n+ `429 Too many requests` - The consumer has sent too many requests in a given amount of time (“rate limiting”).\n+ `500 Server error` - A general server error.\n\n\n### Examples\n\n\n##### Bad Request\n```json\n{\n    \"errors\": [\n        {\n            \"code\": \"400\",\n            \"context\": \"access_denied\",\n            \"message\": \"The resource owner or authorization server denied the request.\"\n        }\n    ],\n    \"success\": false\n}\n```\n\n##### Too many Requests\n```json\n{\n    \"error\": \"Too many requests\"\n}\n```\n\n##### Unauthorized\n```json\n{\n    \"errors\": [\n        {\n            \"code\": \"401\",\n            \"context\": null,\n            \"message\": \"Invalid object ID\"\n        }\n    ],\n    \"success\": false\n}\n```\n\n##### Resource not found\n\n```json\n{\n    \"error\": \"Sorry the resource your trying to access does not exist.\"\n}\n```\n\n\n##### Validation Error\n\n```json\n{\n    \"error\": \"You need to provide a valid product_type query parameters value: 'course', 'bundle', 'subscription'\"\n}\n```\n\n##### Generic Error\n\n```json\n{\n    \"error\": \"Server Error\" \n}\n```\n\n---\n\n## Representation of Date and DateTime\n\n+ All exchange of Date should follow the ISO 8601 standard.\n+ All exchange of DateTime should follow the Unix timestamp format.\n\nWhen you send a Date as input to create a new resource or to filter results, you need to send it as a valid date string with the form \"yyyy-mm-dd\" (Ex: \"2021-05-28\").\n\nWhen you send a DateTime as input to create a new resource or to filter results, you need to send it formatted as a valid Unix timestamp number  (Ex: 1626088013, 1587639230.083278).\n\n---\n\n## Representation of Float Numbers\n\nFloat numbers  are represented with **dot** decimal-point character (Ex: 73.45, 1587639230.083278). The dot character is omitted for numbers with zero value(s) after the decimal-point. For instance, the numbers  52.00 or 52.0 will be presented as 52.\n"
      },
      "servers": [
        {
          "url": "https://stoplight.io/mocks/learnworlds/api:main/2951998",
          "description": "Mock"
        }
      ]
    },
    "sdk": {
      "target": {
        "ts": {
          "title": "TypeScript",
          "ext": "ts",
          "comment": {
            "line": "//"
          },
          "module": {
            "name": "learnworlds"
          },
          "base": "node_modules/@voxgig/sdkgen/project/.sdk",
          "deps": {
            "dotenv": {
              "active": true,
              "version": "^16.4.5",
              "kind": "dev"
            },
            "typescript": {
              "active": true,
              "version": "^5.8.3",
              "kind": "dev"
            },
            "@types/node": {
              "active": true,
              "version": "^22.15.3",
              "kind": "dev"
            }
          },
          "name": "ts",
          "active": true
        },
        "seneca_provider": {
          "title": "Seneca Provider",
          "ext": "ts",
          "comment": {
            "line": "//"
          },
          "module": {
            "name": "learnworlds"
          },
          "base": "node_modules/@seneca/provider-project/.sdk",
          "deps": {
            "seneca-entity": {
              "active": true,
              "version": ">=28",
              "kind": "peer"
            },
            "@seneca/provider": {
              "active": true,
              "version": ">=3",
              "kind": "peer"
            },
            "@seneca/env": {
              "active": true,
              "version": ">=0",
              "kind": "peer"
            },
            "seneca": {
              "active": true,
              "version": "^4.0.0-rc5",
              "kind": "dev"
            },
            "dotenv": {
              "active": true,
              "version": "^16.4.5",
              "kind": "dev"
            },
            "typescript": {
              "active": true,
              "version": "^5.8.3",
              "kind": "dev"
            },
            "@types/node": {
              "active": true,
              "version": "^24.0.14",
              "kind": "dev"
            }
          },
          "meta": {
            "origin": "seneca"
          },
          "name": "seneca_provider",
          "active": true
        }
      },
      "entity": {},
      "feature": {
        "test": {
          "name": "test",
          "title": "Test",
          "version": "0.0.1",
          "active": true,
          "hook": {
            "PostConstruct": {
              "active": true,
              "await": false
            },
            "PostConstructEntity": {
              "active": true,
              "await": false
            },
            "SetData": {
              "active": true,
              "await": false
            },
            "GetData": {
              "active": true,
              "await": false
            },
            "SetMatch": {
              "active": true,
              "await": false
            },
            "GetMatch": {
              "active": true,
              "await": false
            },
            "PreOperation": {
              "active": true,
              "await": false
            },
            "PreSpec": {
              "active": true,
              "await": false
            },
            "PreRequest": {
              "active": true,
              "await": false
            },
            "PreResponse": {
              "active": true,
              "await": false
            },
            "PreResult": {
              "active": true,
              "await": false
            },
            "PostOperation": {
              "active": true,
              "await": false
            }
          },
          "target": {
            "ts": {
              "deps": {}
            },
            "seneca_provider": {
              "deps": {}
            }
          }
        }
      },
      "option": {},
      "config": {
        "auth": {
          "prefix": "Bearer"
        },
        "headers": {
          "content-type": "application/json"
        }
      },
      "flow": {
        "BasicAffiliateFlow": {
          "name": "BasicAffiliateFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_AFFILIATE_ENTID": {
              "affiliate01": "AFFILIATE01",
              "affiliate02": "AFFILIATE02",
              "affiliate03": "AFFILIATE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "affiliate": {
                "AFFILIATE01": {
                  "id": "AFFILIATE01"
                },
                "AFFILIATE02": {
                  "id": "AFFILIATE02"
                },
                "AFFILIATE03": {
                  "id": "AFFILIATE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicUserFlow": {
          "name": "BasicUserFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_USER_ENTID": {
              "user01": "USER01",
              "user02": "USER02",
              "user03": "USER03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "user": {
                "USER01": {
                  "id": "USER01",
                  "email": "s1",
                  "username": "s2",
                  "subscribed_for_marketing_emails": false,
                  "eu_customer": true,
                  "is_admin": false,
                  "is_instructor": true,
                  "is_suspended": false,
                  "is_reporter": true,
                  "role": {},
                  "is_affiliate": true,
                  "referrer_id": "sb",
                  "last_login": 12,
                  "signup_approval_status": "sd",
                  "created": 14,
                  "fields": {},
                  "tags": [],
                  "utms": {},
                  "billing_info": {},
                  "nps_score": "s13",
                  "nps_comment": "s14"
                },
                "USER02": {
                  "id": "USER02",
                  "email": "sd3",
                  "username": "sd4",
                  "subscribed_for_marketing_emails": false,
                  "eu_customer": true,
                  "is_admin": false,
                  "is_instructor": true,
                  "is_suspended": false,
                  "is_reporter": true,
                  "role": {},
                  "is_affiliate": true,
                  "referrer_id": "sdd",
                  "last_login": 222,
                  "signup_approval_status": "sdf",
                  "created": 224,
                  "fields": {},
                  "tags": [],
                  "utms": {},
                  "billing_info": {},
                  "nps_score": "se5",
                  "nps_comment": "se6"
                },
                "USER03": {
                  "id": "USER03",
                  "email": "s1a5",
                  "username": "s1a6",
                  "subscribed_for_marketing_emails": false,
                  "eu_customer": true,
                  "is_admin": false,
                  "is_instructor": true,
                  "is_suspended": false,
                  "is_reporter": true,
                  "role": {},
                  "is_affiliate": true,
                  "referrer_id": "s1af",
                  "last_login": 432,
                  "signup_approval_status": "s1b1",
                  "created": 434,
                  "fields": {},
                  "tags": [],
                  "utms": {},
                  "billing_info": {},
                  "nps_score": "s1b7",
                  "nps_comment": "s1b8"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_user0",
              "kind": "entity",
              "entity": "user",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_user0.match.id`"
              }
            },
            {
              "name": "update_user1",
              "ref": "load_user0",
              "action": "update",
              "reqdata": {
                "email": "s1-`$WHEN`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_user0.match.id`",
                "email": "`dm$=s.update_user1.reqdata.email`"
              }
            },
            {
              "name": "load_user2",
              "kind": "entity",
              "entity": "user",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_user0.match.id`",
                "email": "`dm$=s.update_user1.reqdata.email`"
              }
            }
          ]
        },
        "BasicPaymentFlow": {
          "name": "BasicPaymentFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_PAYMENT_ENTID": {
              "payment01": "PAYMENT01",
              "payment02": "PAYMENT02",
              "payment03": "PAYMENT03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "payment": {
                "PAYMENT01": {
                  "id": "PAYMENT01",
                  "transaction_id": "s1",
                  "type": "s2",
                  "product": {},
                  "price": 4,
                  "discount": 5,
                  "refund_at": 6,
                  "user_id": "s7",
                  "paid_at": 8,
                  "invoice": "s9",
                  "billing_info": {},
                  "coupon": "sb",
                  "instructors": [],
                  "instructors_total_percentage": 13,
                  "tax_amount": 14,
                  "tax_percentage": 15,
                  "affiliate": {},
                  "period": "s11",
                  "payment_plan_current_payment": "s12",
                  "payment_plan_total_payments": "s13",
                  "gateway": "s14",
                  "created": 21
                },
                "PAYMENT02": {
                  "id": "PAYMENT02",
                  "transaction_id": "sdd",
                  "type": "sde",
                  "product": {},
                  "price": 224,
                  "discount": 225,
                  "refund_at": 226,
                  "user_id": "se3",
                  "paid_at": 228,
                  "invoice": "se5",
                  "billing_info": {},
                  "coupon": "se7",
                  "instructors": [],
                  "instructors_total_percentage": 233,
                  "tax_amount": 234,
                  "tax_percentage": 235,
                  "affiliate": {},
                  "period": "sed",
                  "payment_plan_current_payment": "see",
                  "payment_plan_total_payments": "sef",
                  "gateway": "sf0",
                  "created": 241
                },
                "PAYMENT03": {
                  "id": "PAYMENT03",
                  "transaction_id": "s1b9",
                  "type": "s1ba",
                  "product": {},
                  "price": 444,
                  "discount": 445,
                  "refund_at": 446,
                  "user_id": "s1bf",
                  "paid_at": 448,
                  "invoice": "s1c1",
                  "billing_info": {},
                  "coupon": "s1c3",
                  "instructors": [],
                  "instructors_total_percentage": 453,
                  "tax_amount": 454,
                  "tax_percentage": 455,
                  "affiliate": {},
                  "period": "s1c9",
                  "payment_plan_current_payment": "s1ca",
                  "payment_plan_total_payments": "s1cb",
                  "gateway": "s1cc",
                  "created": 461
                }
              }
            }
          },
          "step": [
            {
              "name": "load_payment0",
              "kind": "entity",
              "entity": "payment",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_PAYMENT_ENTID.payment01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_payment0.match.id`"
              }
            }
          ]
        },
        "BasicPayoutCompletedFlow": {
          "name": "BasicPayoutCompletedFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_PAYOUT_COMPLETED_ENTID": {
              "payout_completed01": "PAYOUT_COMPLETED01",
              "payout_completed02": "PAYOUT_COMPLETED02",
              "payout_completed03": "PAYOUT_COMPLETED03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "payout_completed": {
                "PAYOUT_COMPLETED01": {
                  "id": "PAYOUT_COMPLETED01"
                },
                "PAYOUT_COMPLETED02": {
                  "id": "PAYOUT_COMPLETED02"
                },
                "PAYOUT_COMPLETED03": {
                  "id": "PAYOUT_COMPLETED03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPayoutDueFlow": {
          "name": "BasicPayoutDueFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_PAYOUT_DUE_ENTID": {
              "payout_due01": "PAYOUT_DUE01",
              "payout_due02": "PAYOUT_DUE02",
              "payout_due03": "PAYOUT_DUE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "payout_due": {
                "PAYOUT_DUE01": {
                  "id": "PAYOUT_DUE01"
                },
                "PAYOUT_DUE02": {
                  "id": "PAYOUT_DUE02"
                },
                "PAYOUT_DUE03": {
                  "id": "PAYOUT_DUE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPayoutDueUpcomingFlow": {
          "name": "BasicPayoutDueUpcomingFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_PAYOUT_DUE_UPCOMING_ENTID": {
              "payout_due_upcoming01": "PAYOUT_DUE_UPCOMING01",
              "payout_due_upcoming02": "PAYOUT_DUE_UPCOMING02",
              "payout_due_upcoming03": "PAYOUT_DUE_UPCOMING03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "payout_due_upcoming": {
                "PAYOUT_DUE_UPCOMING01": {
                  "id": "PAYOUT_DUE_UPCOMING01"
                },
                "PAYOUT_DUE_UPCOMING02": {
                  "id": "PAYOUT_DUE_UPCOMING02"
                },
                "PAYOUT_DUE_UPCOMING03": {
                  "id": "PAYOUT_DUE_UPCOMING03"
                }
              }
            }
          },
          "step": []
        },
        "BasicUserResponseFlow": {
          "name": "BasicUserResponseFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_USER_RESPONSE_ENTID": {
              "user_response01": "USER_RESPONSE01",
              "user_response02": "USER_RESPONSE02",
              "user_response03": "USER_RESPONSE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "user_response": {
                "USER_RESPONSE01": {
                  "id": "USER_RESPONSE01"
                },
                "USER_RESPONSE02": {
                  "id": "USER_RESPONSE02"
                },
                "USER_RESPONSE03": {
                  "id": "USER_RESPONSE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicBundleFlow": {
          "name": "BasicBundleFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_BUNDLE_ENTID": {
              "bundle01": "BUNDLE01",
              "bundle02": "BUNDLE02",
              "bundle03": "BUNDLE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "bundle": {
                "BUNDLE01": {
                  "id": "BUNDLE01",
                  "title": "s1",
                  "products": {},
                  "image": "s3",
                  "description": "s4",
                  "access": "s5",
                  "created": 6,
                  "modified": 7,
                  "afterpurchase": {},
                  "price": 9,
                  "paymentplans": []
                },
                "BUNDLE02": {
                  "id": "BUNDLE02",
                  "title": "s6f",
                  "products": {},
                  "image": "s71",
                  "description": "s72",
                  "access": "s73",
                  "created": 116,
                  "modified": 117,
                  "afterpurchase": {},
                  "price": 119,
                  "paymentplans": []
                },
                "BUNDLE03": {
                  "id": "BUNDLE03",
                  "title": "sdd",
                  "products": {},
                  "image": "sdf",
                  "description": "se0",
                  "access": "se1",
                  "created": 226,
                  "modified": 227,
                  "afterpurchase": {},
                  "price": 229,
                  "paymentplans": []
                }
              }
            }
          },
          "step": [
            {
              "name": "load_bundle0",
              "kind": "entity",
              "entity": "bundle",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_BUNDLE_ENTID.bundle01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_bundle0.match.id`"
              }
            }
          ]
        },
        "BasicCertificateFlow": {
          "name": "BasicCertificateFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_CERTIFICATE_ENTID": {
              "certificate01": "CERTIFICATE01",
              "certificate02": "CERTIFICATE02",
              "certificate03": "CERTIFICATE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "certificate": {
                "CERTIFICATE01": {
                  "id": "CERTIFICATE01"
                },
                "CERTIFICATE02": {
                  "id": "CERTIFICATE02"
                },
                "CERTIFICATE03": {
                  "id": "CERTIFICATE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicCommunityCollectionFlow": {
          "name": "BasicCommunityCollectionFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_COMMUNITY_COLLECTION_ENTID": {
              "community_collection01": "COMMUNITY_COLLECTION01",
              "community_collection02": "COMMUNITY_COLLECTION02",
              "community_collection03": "COMMUNITY_COLLECTION03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "community_collection": {
                "COMMUNITY_COLLECTION01": {
                  "id": "COMMUNITY_COLLECTION01"
                },
                "COMMUNITY_COLLECTION02": {
                  "id": "COMMUNITY_COLLECTION02"
                },
                "COMMUNITY_COLLECTION03": {
                  "id": "COMMUNITY_COLLECTION03"
                }
              }
            }
          },
          "step": []
        },
        "BasicCommunityPostFlow": {
          "name": "BasicCommunityPostFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_COMMUNITY_POST_ENTID": {
              "community_post01": "COMMUNITY_POST01",
              "community_post02": "COMMUNITY_POST02",
              "community_post03": "COMMUNITY_POST03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "community_post": {
                "COMMUNITY_POST01": {
                  "id": "COMMUNITY_POST01",
                  "posted_in": {},
                  "user": {},
                  "text": "s3",
                  "mentions": [],
                  "likes": [],
                  "upvotes": [],
                  "items": [],
                  "created": 8
                },
                "COMMUNITY_POST02": {
                  "id": "COMMUNITY_POST02",
                  "posted_in": {},
                  "user": {},
                  "text": "s5d",
                  "mentions": [],
                  "likes": [],
                  "upvotes": [],
                  "items": [],
                  "created": 98
                },
                "COMMUNITY_POST03": {
                  "id": "COMMUNITY_POST03",
                  "posted_in": {},
                  "user": {},
                  "text": "sb7",
                  "mentions": [],
                  "likes": [],
                  "upvotes": [],
                  "items": [],
                  "created": 188
                }
              }
            }
          },
          "step": [
            {
              "name": "load_community_post0",
              "kind": "entity",
              "entity": "community_post",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_COMMUNITY_POST_ENTID.community_post01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_community_post0.match.id`"
              }
            }
          ]
        },
        "BasicCommunitySpaceFlow": {
          "name": "BasicCommunitySpaceFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_COMMUNITY_SPACE_ENTID": {
              "community_space01": "COMMUNITY_SPACE01",
              "community_space02": "COMMUNITY_SPACE02",
              "community_space03": "COMMUNITY_SPACE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "community_space": {
                "COMMUNITY_SPACE01": {
                  "id": "COMMUNITY_SPACE01",
                  "title": "s1",
                  "description": "s2",
                  "access": "s3",
                  "owner": {},
                  "usages": [],
                  "hidden_from_community": true,
                  "is_invitation_required": false,
                  "is_members_allowed_to_view_members": true,
                  "collectionid": "s9"
                },
                "COMMUNITY_SPACE02": {
                  "id": "COMMUNITY_SPACE02",
                  "title": "s65",
                  "description": "s66",
                  "access": "s67",
                  "owner": {},
                  "usages": [],
                  "hidden_from_community": true,
                  "is_invitation_required": false,
                  "is_members_allowed_to_view_members": true,
                  "collectionid": "s6d"
                },
                "COMMUNITY_SPACE03": {
                  "id": "COMMUNITY_SPACE03",
                  "title": "sc9",
                  "description": "sca",
                  "access": "scb",
                  "owner": {},
                  "usages": [],
                  "hidden_from_community": true,
                  "is_invitation_required": false,
                  "is_members_allowed_to_view_members": true,
                  "collectionid": "sd1"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_community_space0",
              "kind": "entity",
              "entity": "community_space",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_COMMUNITY_SPACE_ENTID.community_space01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_community_space0.match.id`"
              }
            },
            {
              "name": "update_community_space1",
              "ref": "load_community_space0",
              "action": "update",
              "reqdata": {
                "title": "s1-`$WHEN`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_community_space0.match.id`",
                "title": "`dm$=s.update_community_space1.reqdata.title`"
              }
            },
            {
              "name": "load_community_space2",
              "kind": "entity",
              "entity": "community_space",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_COMMUNITY_SPACE_ENTID.community_space01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_community_space0.match.id`",
                "title": "`dm$=s.update_community_space1.reqdata.title`"
              }
            }
          ]
        },
        "BasicSpaceFlow": {
          "name": "BasicSpaceFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_SPACE_ENTID": {
              "space01": "SPACE01",
              "space02": "SPACE02",
              "space03": "SPACE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "space": {
                "SPACE01": {
                  "id": "SPACE01"
                },
                "SPACE02": {
                  "id": "SPACE02"
                },
                "SPACE03": {
                  "id": "SPACE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicCourseFlow": {
          "name": "BasicCourseFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_COURSE_ENTID": {
              "course01": "COURSE01",
              "course02": "COURSE02",
              "course03": "COURSE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "course": {
                "COURSE01": {
                  "id": "COURSE01",
                  "title": "s1",
                  "expires": "s2",
                  "expirestype": "s3",
                  "afterpurchase": {},
                  "categories": [],
                  "description": "s6",
                  "label": "s7",
                  "author": {},
                  "courseimage": "s9",
                  "original_price": 10,
                  "discount_price": 11,
                  "final_price": 12,
                  "dripfeed": "sd",
                  "identifiers": {},
                  "access": "sf",
                  "created": 16,
                  "modified": 17
                },
                "COURSE02": {
                  "id": "COURSE02",
                  "title": "sb5",
                  "expires": "sb6",
                  "expirestype": "sb7",
                  "afterpurchase": {},
                  "categories": [],
                  "description": "sba",
                  "label": "sbb",
                  "author": {},
                  "courseimage": "sbd",
                  "original_price": 190,
                  "discount_price": 191,
                  "final_price": 192,
                  "dripfeed": "sc1",
                  "identifiers": {},
                  "access": "sc3",
                  "created": 196,
                  "modified": 197
                },
                "COURSE03": {
                  "id": "COURSE03",
                  "title": "s169",
                  "expires": "s16a",
                  "expirestype": "s16b",
                  "afterpurchase": {},
                  "categories": [],
                  "description": "s16e",
                  "label": "s16f",
                  "author": {},
                  "courseimage": "s171",
                  "original_price": 370,
                  "discount_price": 371,
                  "final_price": 372,
                  "dripfeed": "s175",
                  "identifiers": {},
                  "access": "s177",
                  "created": 376,
                  "modified": 377
                }
              }
            }
          },
          "step": [
            {
              "name": "load_course0",
              "kind": "entity",
              "entity": "course",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_COURSE_ENTID.course01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_course0.match.id`"
              }
            },
            {
              "name": "update_course1",
              "ref": "load_course0",
              "action": "update",
              "reqdata": {
                "title": "s1-`$WHEN`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_course0.match.id`",
                "title": "`dm$=s.update_course1.reqdata.title`"
              }
            },
            {
              "name": "load_course2",
              "kind": "entity",
              "entity": "course",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_COURSE_ENTID.course01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_course0.match.id`",
                "title": "`dm$=s.update_course1.reqdata.title`"
              }
            }
          ]
        },
        "BasicCourseAnalyticFlow": {
          "name": "BasicCourseAnalyticFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_COURSE_ANALYTIC_ENTID": {
              "course_analytic01": "COURSE_ANALYTIC01",
              "course_analytic02": "COURSE_ANALYTIC02",
              "course_analytic03": "COURSE_ANALYTIC03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE",
            "LEARNWORLDS_TEST_COURSE_ENTID": {
              "course01": "COURSE01"
            }
          },
          "test": {
            "entity": {
              "course_analytic": {
                "COURSE_ANALYTIC01": {
                  "students": "s0",
                  "videos": "s1",
                  "learning_units": "s2",
                  "video_time": "s3",
                  "video_viewing_time": "s4",
                  "avg_score_rate": 5,
                  "success_rate": 6,
                  "total_study_time": "s7",
                  "avg_time_to_finish": "s8",
                  "social_interactions": "s9",
                  "certificates_issued": "sa",
                  "id": "COURSE_ANALYTIC01",
                  "course_id": "COURSE01"
                },
                "COURSE_ANALYTIC02": {
                  "students": "s6e",
                  "videos": "s6f",
                  "learning_units": "s70",
                  "video_time": "s71",
                  "video_viewing_time": "s72",
                  "avg_score_rate": 115,
                  "success_rate": 116,
                  "total_study_time": "s75",
                  "avg_time_to_finish": "s76",
                  "social_interactions": "s77",
                  "certificates_issued": "s78",
                  "id": "COURSE_ANALYTIC02"
                },
                "COURSE_ANALYTIC03": {
                  "students": "sdc",
                  "videos": "sdd",
                  "learning_units": "sde",
                  "video_time": "sdf",
                  "video_viewing_time": "se0",
                  "avg_score_rate": 225,
                  "success_rate": 226,
                  "total_study_time": "se3",
                  "avg_time_to_finish": "se4",
                  "social_interactions": "se5",
                  "certificates_issued": "se6",
                  "id": "COURSE_ANALYTIC03"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_course_analytic0",
              "kind": "entity",
              "entity": "course_analytic",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_COURSE_ANALYTIC_ENTID.course_analytic01`",
                "course_id": "`dm$=p.LEARNWORLDS_TEST_COURSE_ENTID.course01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_course_analytic0.match.id`",
                "course_id": "`dm$=p.LEARNWORLDS_TEST_COURSE_ENTID.course01`"
              }
            }
          ]
        },
        "BasicCourseContentFlow": {
          "name": "BasicCourseContentFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_COURSE_CONTENT_ENTID": {
              "course_content01": "COURSE_CONTENT01",
              "course_content02": "COURSE_CONTENT02",
              "course_content03": "COURSE_CONTENT03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE",
            "LEARNWORLDS_TEST_COURSE_ENTID": {
              "course01": "COURSE01"
            }
          },
          "test": {
            "entity": {
              "course_content": {
                "COURSE_CONTENT01": {
                  "id": "COURSE_CONTENT01",
                  "title": "s1",
                  "sections": [],
                  "course_id": "COURSE01"
                },
                "COURSE_CONTENT02": {
                  "id": "COURSE_CONTENT02",
                  "title": "s1f",
                  "sections": []
                },
                "COURSE_CONTENT03": {
                  "id": "COURSE_CONTENT03",
                  "title": "s3d",
                  "sections": []
                }
              }
            }
          },
          "step": [
            {
              "name": "load_course_content0",
              "kind": "entity",
              "entity": "course_content",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_COURSE_CONTENT_ENTID.course_content01`",
                "course_id": "`dm$=p.LEARNWORLDS_TEST_COURSE_ENTID.course01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_course_content0.match.id`",
                "course_id": "`dm$=p.LEARNWORLDS_TEST_COURSE_ENTID.course01`"
              }
            }
          ]
        },
        "BasicGradeFlow": {
          "name": "BasicGradeFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_GRADE_ENTID": {
              "grade01": "GRADE01",
              "grade02": "GRADE02",
              "grade03": "GRADE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "grade": {
                "GRADE01": {
                  "id": "GRADE01"
                },
                "GRADE02": {
                  "id": "GRADE02"
                },
                "GRADE03": {
                  "id": "GRADE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicUnitAnalyticFlow": {
          "name": "BasicUnitAnalyticFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_UNIT_ANALYTIC_ENTID": {
              "unit_analytic01": "UNIT_ANALYTIC01",
              "unit_analytic02": "UNIT_ANALYTIC02",
              "unit_analytic03": "UNIT_ANALYTIC03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE",
            "LEARNWORLDS_TEST_COURSE_ENTID": {
              "course01": "COURSE01"
            }
          },
          "test": {
            "entity": {
              "unit_analytic": {
                "UNIT_ANALYTIC01": {
                  "type": "s0",
                  "name": "s1",
                  "users_completed": "s2",
                  "viewers": "s3",
                  "avg_study_time": 4,
                  "total_study_time": 5,
                  "avg_score_rate": 6,
                  "id": "UNIT_ANALYTIC01",
                  "course_id": "COURSE01"
                },
                "UNIT_ANALYTIC02": {
                  "type": "s46",
                  "name": "s47",
                  "users_completed": "s48",
                  "viewers": "s49",
                  "avg_study_time": 74,
                  "total_study_time": 75,
                  "avg_score_rate": 76,
                  "id": "UNIT_ANALYTIC02"
                },
                "UNIT_ANALYTIC03": {
                  "type": "s8c",
                  "name": "s8d",
                  "users_completed": "s8e",
                  "viewers": "s8f",
                  "avg_study_time": 144,
                  "total_study_time": 145,
                  "avg_score_rate": 146,
                  "id": "UNIT_ANALYTIC03"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_unit_analytic0",
              "kind": "entity",
              "entity": "unit_analytic",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_UNIT_ANALYTIC_ENTID.unit_analytic01`",
                "course_id": "`dm$=p.LEARNWORLDS_TEST_COURSE_ENTID.course01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_unit_analytic0.match.id`",
                "course_id": "`dm$=p.LEARNWORLDS_TEST_COURSE_ENTID.course01`"
              }
            }
          ]
        },
        "BasicEventLogFlow": {
          "name": "BasicEventLogFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_EVENT_LOG_ENTID": {
              "event_log01": "EVENT_LOG01",
              "event_log02": "EVENT_LOG02",
              "event_log03": "EVENT_LOG03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "event_log": {
                "EVENT_LOG01": {
                  "id": "EVENT_LOG01"
                },
                "EVENT_LOG02": {
                  "id": "EVENT_LOG02"
                },
                "EVENT_LOG03": {
                  "id": "EVENT_LOG03"
                }
              }
            }
          },
          "step": []
        },
        "BasicInstallmentFlow": {
          "name": "BasicInstallmentFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_INSTALLMENT_ENTID": {
              "installment01": "INSTALLMENT01",
              "installment02": "INSTALLMENT02",
              "installment03": "INSTALLMENT03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "installment": {
                "INSTALLMENT01": {
                  "id": "INSTALLMENT01"
                },
                "INSTALLMENT02": {
                  "id": "INSTALLMENT02"
                },
                "INSTALLMENT03": {
                  "id": "INSTALLMENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicLeadFlow": {
          "name": "BasicLeadFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_LEAD_ENTID": {
              "lead01": "LEAD01",
              "lead02": "LEAD02",
              "lead03": "LEAD03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "lead": {
                "LEAD01": {
                  "id": "LEAD01"
                },
                "LEAD02": {
                  "id": "LEAD02"
                },
                "LEAD03": {
                  "id": "LEAD03"
                }
              }
            }
          },
          "step": []
        },
        "BasicInvoiceLinkFlow": {
          "name": "BasicInvoiceLinkFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_INVOICE_LINK_ENTID": {
              "invoice_link01": "INVOICE_LINK01",
              "invoice_link02": "INVOICE_LINK02",
              "invoice_link03": "INVOICE_LINK03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE",
            "LEARNWORLDS_TEST_PAYMENT_ENTID": {
              "payment01": "PAYMENT01"
            }
          },
          "test": {
            "entity": {
              "invoice_link": {
                "INVOICE_LINK01": {
                  "invoice": "s0",
                  "url": "s1",
                  "expires_at": 2,
                  "id": "INVOICE_LINK01",
                  "payment_id": "PAYMENT01"
                },
                "INVOICE_LINK02": {
                  "invoice": "s1e",
                  "url": "s1f",
                  "expires_at": 32,
                  "id": "INVOICE_LINK02"
                },
                "INVOICE_LINK03": {
                  "invoice": "s3c",
                  "url": "s3d",
                  "expires_at": 62,
                  "id": "INVOICE_LINK03"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_invoice_link0",
              "kind": "entity",
              "entity": "invoice_link",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_INVOICE_LINK_ENTID.invoice_link01`",
                "payment_id": "`dm$=p.LEARNWORLDS_TEST_PAYMENT_ENTID.payment01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_invoice_link0.match.id`",
                "payment_id": "`dm$=p.LEARNWORLDS_TEST_PAYMENT_ENTID.payment01`"
              }
            }
          ]
        },
        "BasicPromotionFlow": {
          "name": "BasicPromotionFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_PROMOTION_ENTID": {
              "promotion01": "PROMOTION01",
              "promotion02": "PROMOTION02",
              "promotion03": "PROMOTION03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "promotion": {
                "PROMOTION01": {
                  "id": "PROMOTION01",
                  "name": "s1",
                  "coupons": [],
                  "applies_to_all": [],
                  "products": [],
                  "type": "s5",
                  "value": 6,
                  "created": 7,
                  "modified": 8
                },
                "PROMOTION02": {
                  "id": "PROMOTION02",
                  "name": "s5b",
                  "coupons": [],
                  "applies_to_all": [],
                  "products": [],
                  "type": "s5f",
                  "value": 96,
                  "created": 97,
                  "modified": 98
                },
                "PROMOTION03": {
                  "id": "PROMOTION03",
                  "name": "sb5",
                  "coupons": [],
                  "applies_to_all": [],
                  "products": [],
                  "type": "sb9",
                  "value": 186,
                  "created": 187,
                  "modified": 188
                }
              }
            }
          },
          "step": [
            {
              "name": "load_promotion0",
              "kind": "entity",
              "entity": "promotion",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_PROMOTION_ENTID.promotion01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_promotion0.match.id`"
              }
            }
          ]
        },
        "BasicCouponFlow": {
          "name": "BasicCouponFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_COUPON_ENTID": {
              "coupon01": "COUPON01",
              "coupon02": "COUPON02",
              "coupon03": "COUPON03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "coupon": {
                "COUPON01": {
                  "id": "COUPON01"
                },
                "COUPON02": {
                  "id": "COUPON02"
                },
                "COUPON03": {
                  "id": "COUPON03"
                }
              }
            }
          },
          "step": []
        },
        "BasicCouponUsageFlow": {
          "name": "BasicCouponUsageFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_COUPON_USAGE_ENTID": {
              "coupon_usage01": "COUPON_USAGE01",
              "coupon_usage02": "COUPON_USAGE02",
              "coupon_usage03": "COUPON_USAGE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "coupon_usage": {
                "COUPON_USAGE01": {
                  "usage": {},
                  "payments": [],
                  "meta": {},
                  "id": "COUPON_USAGE01"
                },
                "COUPON_USAGE02": {
                  "usage": {},
                  "payments": [],
                  "meta": {},
                  "id": "COUPON_USAGE02"
                },
                "COUPON_USAGE03": {
                  "usage": {},
                  "payments": [],
                  "meta": {},
                  "id": "COUPON_USAGE03"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_coupon_usage0",
              "kind": "entity",
              "entity": "coupon_usage",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_COUPON_USAGE_ENTID.coupon_usage01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_coupon_usage0.match.id`"
              }
            }
          ]
        },
        "BasicSchoolEventFlow": {
          "name": "BasicSchoolEventFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_SCHOOL_EVENT_ENTID": {
              "school_event01": "SCHOOL_EVENT01",
              "school_event02": "SCHOOL_EVENT02",
              "school_event03": "SCHOOL_EVENT03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "school_event": {
                "SCHOOL_EVENT01": {
                  "id": "SCHOOL_EVENT01"
                },
                "SCHOOL_EVENT02": {
                  "id": "SCHOOL_EVENT02"
                },
                "SCHOOL_EVENT03": {
                  "id": "SCHOOL_EVENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicSeatFlow": {
          "name": "BasicSeatFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_SEAT_ENTID": {
              "seat01": "SEAT01",
              "seat02": "SEAT02",
              "seat03": "SEAT03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE",
            "LEARNWORLDS_TEST_USER_ENTID": {
              "user01": "USER01"
            }
          },
          "test": {
            "entity": {
              "seat": {
                "SEAT01": {
                  "id": "SEAT01",
                  "title": "s1",
                  "description": "s2",
                  "products": {},
                  "number_of_seats": "s4",
                  "available_seats": "s5",
                  "max_number_of_users": "s6",
                  "seat_managers": [],
                  "tags": [],
                  "total_enrollments": "s9",
                  "access": "sa",
                  "created": 11,
                  "modified": 12,
                  "active": false,
                  "got_seat_on": 14,
                  "user_id": "USER01"
                },
                "SEAT02": {
                  "id": "SEAT02",
                  "title": "s97",
                  "description": "s98",
                  "products": {},
                  "number_of_seats": "s9a",
                  "available_seats": "s9b",
                  "max_number_of_users": "s9c",
                  "seat_managers": [],
                  "tags": [],
                  "total_enrollments": "s9f",
                  "access": "sa0",
                  "created": 161,
                  "modified": 162,
                  "active": false,
                  "got_seat_on": 164
                },
                "SEAT03": {
                  "id": "SEAT03",
                  "title": "s12d",
                  "description": "s12e",
                  "products": {},
                  "number_of_seats": "s130",
                  "available_seats": "s131",
                  "max_number_of_users": "s132",
                  "seat_managers": [],
                  "tags": [],
                  "total_enrollments": "s135",
                  "access": "s136",
                  "created": 311,
                  "modified": 312,
                  "active": false,
                  "got_seat_on": 314
                }
              }
            }
          },
          "step": [
            {
              "name": "load_seat0",
              "kind": "entity",
              "entity": "seat",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_SEAT_ENTID.seat01`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_seat0.match.id`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`"
              }
            },
            {
              "name": "update_seat1",
              "ref": "load_seat0",
              "action": "update",
              "reqdata": {
                "title": "s1-`$WHEN`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_seat0.match.id`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`",
                "title": "`dm$=s.update_seat1.reqdata.title`"
              }
            },
            {
              "name": "load_seat2",
              "kind": "entity",
              "entity": "seat",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_SEAT_ENTID.seat01`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_seat0.match.id`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`",
                "title": "`dm$=s.update_seat1.reqdata.title`"
              }
            }
          ]
        },
        "BasicSubscriptionPlanFlow": {
          "name": "BasicSubscriptionPlanFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_SUBSCRIPTION_PLAN_ENTID": {
              "subscription_plan01": "SUBSCRIPTION_PLAN01",
              "subscription_plan02": "SUBSCRIPTION_PLAN02",
              "subscription_plan03": "SUBSCRIPTION_PLAN03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "subscription_plan": {
                "SUBSCRIPTION_PLAN01": {
                  "id": "SUBSCRIPTION_PLAN01",
                  "title": "s1",
                  "stripeplanid": "s2",
                  "description": "s3",
                  "products": {},
                  "image": "s5",
                  "interval": "s6",
                  "interval_type": "s7",
                  "trial_period_days": "s8",
                  "afterpurchase": {},
                  "access": "sa",
                  "created": 11,
                  "modified": 12,
                  "price": 13
                },
                "SUBSCRIPTION_PLAN02": {
                  "id": "SUBSCRIPTION_PLAN02",
                  "title": "s8d",
                  "stripeplanid": "s8e",
                  "description": "s8f",
                  "products": {},
                  "image": "s91",
                  "interval": "s92",
                  "interval_type": "s93",
                  "trial_period_days": "s94",
                  "afterpurchase": {},
                  "access": "s96",
                  "created": 151,
                  "modified": 152,
                  "price": 153
                },
                "SUBSCRIPTION_PLAN03": {
                  "id": "SUBSCRIPTION_PLAN03",
                  "title": "s119",
                  "stripeplanid": "s11a",
                  "description": "s11b",
                  "products": {},
                  "image": "s11d",
                  "interval": "s11e",
                  "interval_type": "s11f",
                  "trial_period_days": "s120",
                  "afterpurchase": {},
                  "access": "s122",
                  "created": 291,
                  "modified": 292,
                  "price": 293
                }
              }
            }
          },
          "step": [
            {
              "name": "load_subscription_plan0",
              "kind": "entity",
              "entity": "subscription_plan",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_SUBSCRIPTION_PLAN_ENTID.subscription_plan01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_subscription_plan0.match.id`"
              }
            }
          ]
        },
        "BasicUserRoleFlow": {
          "name": "BasicUserRoleFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_USER_ROLE_ENTID": {
              "user_role01": "USER_ROLE01",
              "user_role02": "USER_ROLE02",
              "user_role03": "USER_ROLE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE",
            "LEARNWORLDS_TEST_USER_ENTID": {
              "user01": "USER01"
            }
          },
          "test": {
            "entity": {
              "user_role": {
                "USER_ROLE01": {
                  "id": "USER_ROLE01",
                  "email": "s1",
                  "username": "s2",
                  "role_id": "s3",
                  "user_role": {},
                  "assigned_courses": [],
                  "assigned_seat_offering_ids": [],
                  "assigned_user_group_ids": [],
                  "assigned_segment_id": "s8",
                  "user_id": "USER01"
                },
                "USER_ROLE02": {
                  "id": "USER_ROLE02",
                  "email": "s5b",
                  "username": "s5c",
                  "role_id": "s5d",
                  "user_role": {},
                  "assigned_courses": [],
                  "assigned_seat_offering_ids": [],
                  "assigned_user_group_ids": [],
                  "assigned_segment_id": "s62"
                },
                "USER_ROLE03": {
                  "id": "USER_ROLE03",
                  "email": "sb5",
                  "username": "sb6",
                  "role_id": "sb7",
                  "user_role": {},
                  "assigned_courses": [],
                  "assigned_seat_offering_ids": [],
                  "assigned_user_group_ids": [],
                  "assigned_segment_id": "sbc"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_user_role0",
              "kind": "entity",
              "entity": "user_role",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_USER_ROLE_ENTID.user_role01`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_user_role0.match.id`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`"
              }
            },
            {
              "name": "update_user_role1",
              "ref": "load_user_role0",
              "action": "update",
              "reqdata": {
                "email": "s1-`$WHEN`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_user_role0.match.id`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`",
                "email": "`dm$=s.update_user_role1.reqdata.email`"
              }
            },
            {
              "name": "load_user_role2",
              "kind": "entity",
              "entity": "user_role",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_USER_ROLE_ENTID.user_role01`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_user_role0.match.id`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`",
                "email": "`dm$=s.update_user_role1.reqdata.email`"
              }
            }
          ]
        },
        "BasicUserSubscriptionFlow": {
          "name": "BasicUserSubscriptionFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_USER_SUBSCRIPTION_ENTID": {
              "user_subscription01": "USER_SUBSCRIPTION01",
              "user_subscription02": "USER_SUBSCRIPTION02",
              "user_subscription03": "USER_SUBSCRIPTION03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "user_subscription": {
                "USER_SUBSCRIPTION01": {
                  "id": "USER_SUBSCRIPTION01"
                },
                "USER_SUBSCRIPTION02": {
                  "id": "USER_SUBSCRIPTION02"
                },
                "USER_SUBSCRIPTION03": {
                  "id": "USER_SUBSCRIPTION03"
                }
              }
            }
          },
          "step": []
        },
        "BasicUserGroupFlow": {
          "name": "BasicUserGroupFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_USER_GROUP_ENTID": {
              "user_group01": "USER_GROUP01",
              "user_group02": "USER_GROUP02",
              "user_group03": "USER_GROUP03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "user_group": {
                "USER_GROUP01": {
                  "id": "USER_GROUP01",
                  "title": "s1",
                  "description": "s2",
                  "products": {},
                  "enroll_users_on_courses": true,
                  "group_managers": [],
                  "tags": [],
                  "created": 7,
                  "modified": 8
                },
                "USER_GROUP02": {
                  "id": "USER_GROUP02",
                  "title": "s5b",
                  "description": "s5c",
                  "products": {},
                  "enroll_users_on_courses": true,
                  "group_managers": [],
                  "tags": [],
                  "created": 97,
                  "modified": 98
                },
                "USER_GROUP03": {
                  "id": "USER_GROUP03",
                  "title": "sb5",
                  "description": "sb6",
                  "products": {},
                  "enroll_users_on_courses": true,
                  "group_managers": [],
                  "tags": [],
                  "created": 187,
                  "modified": 188
                }
              }
            }
          },
          "step": [
            {
              "name": "load_user_group0",
              "kind": "entity",
              "entity": "user_group",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_USER_GROUP_ENTID.user_group01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_user_group0.match.id`"
              }
            },
            {
              "name": "update_user_group1",
              "ref": "load_user_group0",
              "action": "update",
              "reqdata": {
                "title": "s1-`$WHEN`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_user_group0.match.id`",
                "title": "`dm$=s.update_user_group1.reqdata.title`"
              }
            },
            {
              "name": "load_user_group2",
              "kind": "entity",
              "entity": "user_group",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_USER_GROUP_ENTID.user_group01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_user_group0.match.id`",
                "title": "`dm$=s.update_user_group1.reqdata.title`"
              }
            }
          ]
        },
        "BasicUserSegmentFlow": {
          "name": "BasicUserSegmentFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_USER_SEGMENT_ENTID": {
              "user_segment01": "USER_SEGMENT01",
              "user_segment02": "USER_SEGMENT02",
              "user_segment03": "USER_SEGMENT03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "user_segment": {
                "USER_SEGMENT01": {
                  "id": "USER_SEGMENT01"
                },
                "USER_SEGMENT02": {
                  "id": "USER_SEGMENT02"
                },
                "USER_SEGMENT03": {
                  "id": "USER_SEGMENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicEnrollmentFlow": {
          "name": "BasicEnrollmentFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_ENROLLMENT_ENTID": {
              "enrollment01": "ENROLLMENT01",
              "enrollment02": "ENROLLMENT02",
              "enrollment03": "ENROLLMENT03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "enrollment": {
                "ENROLLMENT01": {
                  "id": "ENROLLMENT01"
                },
                "ENROLLMENT02": {
                  "id": "ENROLLMENT02"
                },
                "ENROLLMENT03": {
                  "id": "ENROLLMENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicCompleteFlow": {
          "name": "BasicCompleteFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_COMPLETE_ENTID": {
              "complete01": "COMPLETE01",
              "complete02": "COMPLETE02",
              "complete03": "COMPLETE03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "complete": {
                "COMPLETE01": {
                  "id": "COMPLETE01"
                },
                "COMPLETE02": {
                  "id": "COMPLETE02"
                },
                "COMPLETE03": {
                  "id": "COMPLETE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicUserProgressFlow": {
          "name": "BasicUserProgressFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_USER_PROGRESS_ENTID": {
              "user_progress01": "USER_PROGRESS01",
              "user_progress02": "USER_PROGRESS02",
              "user_progress03": "USER_PROGRESS03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE",
            "LEARNWORLDS_TEST_USER_ENTID": {
              "user01": "USER01"
            }
          },
          "test": {
            "entity": {
              "user_progress": {
                "USER_PROGRESS01": {
                  "status": "s0",
                  "progress_rate": 1,
                  "average_score_rate": 2,
                  "time_on_course": "s3",
                  "total_units": "s4",
                  "completed_units": "s5",
                  "completed_at": 6,
                  "progress_per_section_unit": [],
                  "id": "USER_PROGRESS01",
                  "user_id": "USER01"
                },
                "USER_PROGRESS02": {
                  "status": "s50",
                  "progress_rate": 81,
                  "average_score_rate": 82,
                  "time_on_course": "s53",
                  "total_units": "s54",
                  "completed_units": "s55",
                  "completed_at": 86,
                  "progress_per_section_unit": [],
                  "id": "USER_PROGRESS02"
                },
                "USER_PROGRESS03": {
                  "status": "sa0",
                  "progress_rate": 161,
                  "average_score_rate": 162,
                  "time_on_course": "sa3",
                  "total_units": "sa4",
                  "completed_units": "sa5",
                  "completed_at": 166,
                  "progress_per_section_unit": [],
                  "id": "USER_PROGRESS03"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_user_progress0",
              "kind": "entity",
              "entity": "user_progress",
              "action": "load",
              "match": {
                "id": "`dm$=p.LEARNWORLDS_TEST_USER_PROGRESS_ENTID.user_progress01`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_user_progress0.match.id`",
                "user_id": "`dm$=p.LEARNWORLDS_TEST_USER_ENTID.user01`"
              }
            }
          ]
        },
        "BasicResetFlow": {
          "name": "BasicResetFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_RESET_ENTID": {
              "reset01": "RESET01",
              "reset02": "RESET02",
              "reset03": "RESET03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "reset": {
                "RESET01": {
                  "id": "RESET01"
                },
                "RESET02": {
                  "id": "RESET02"
                },
                "RESET03": {
                  "id": "RESET03"
                }
              }
            }
          },
          "step": []
        },
        "BasicProductFlow": {
          "name": "BasicProductFlow",
          "active": true,
          "param": {
            "LEARNWORLDS_TEST_PRODUCT_ENTID": {
              "product01": "PRODUCT01",
              "product02": "PRODUCT02",
              "product03": "PRODUCT03"
            },
            "LEARNWORLDS_TEST_LIVE": "FALSE",
            "LEARNWORLDS_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "product": {
                "PRODUCT01": {
                  "id": "PRODUCT01"
                },
                "PRODUCT02": {
                  "id": "PRODUCT02"
                },
                "PRODUCT03": {
                  "id": "PRODUCT03"
                }
              }
            }
          },
          "step": []
        }
      }
    }
  }
}